{"ast":null,"code":"var _jsxFileName = \"D:\\\\Bureau\\\\Projets Perso\\\\Online CV\\\\src\\\\utils\\\\hooks\\\\withScrollbar.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Scrollbar(_ref) {\n  _s();\n\n  let {\n    totalHeight,\n    cappedHeight\n  } = _ref;\n  const [trackHeight, setTrackHeight] = useState(null);\n  useEffect(() => setTrackHeight(cappedHeight * cappedHeight / totalHeight), [cappedHeight, totalHeight]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scrollbar\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Scrollbar, \"dmVuCxY2N+JDfNXJOXu6tC9+B94=\");\n\n_c = Scrollbar;\n\nfunction WithScrollbarComponent(_ref2) {\n  _s2();\n\n  let {\n    Child\n  } = _ref2;\n  const [totalHeight, setTotalHeight] = useState(null);\n  const [cappedHeight, setCappedHeight] = useState(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scrollable\",\n    children: [/*#__PURE__*/_jsxDEV(Child, {\n      ref: node => node && setTimeout(() => {\n        setCappedHeight(node.clientHeight);\n        setTotalHeight(node.scrollHeight);\n      }, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Scrollbar, {\n      totalHeight: totalHeight,\n      cappedHeight: cappedHeight\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 3\n  }, this);\n}\n\n_s2(WithScrollbarComponent, \"9BOQNmy2IRKpMF2RCRrzcJLTHRI=\");\n\n_c2 = WithScrollbarComponent;\nexport default function withScrollbar(Child) {\n  return () => /*#__PURE__*/_jsxDEV(WithScrollbarComponent, {\n    Child: Child\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 15\n  }, this);\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Scrollbar\");\n$RefreshReg$(_c2, \"WithScrollbarComponent\");","map":{"version":3,"sources":["D:/Bureau/Projets Perso/Online CV/src/utils/hooks/withScrollbar.jsx"],"names":["useEffect","useState","Scrollbar","totalHeight","cappedHeight","trackHeight","setTrackHeight","WithScrollbarComponent","Child","setTotalHeight","setCappedHeight","node","setTimeout","clientHeight","scrollHeight","withScrollbar"],"mappings":";;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,SAASC,SAAT,OAAkD;AAAA;;AAAA,MAA/B;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAA+B;AACjD,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,IAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAMM,cAAc,CAAEF,YAAY,GAAGA,YAAhB,GAAgCD,WAAjC,CAArB,EAAoE,CAACC,YAAD,EAAeD,WAAf,CAApE,CAAT;AAEA,sBAAO;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,UAAP;AACA;;GANQD,S;;KAAAA,S;;AAQT,SAASK,sBAAT,QAA2C;AAAA;;AAAA,MAAX;AAAEC,IAAAA;AAAF,GAAW;AAC1C,QAAM,CAACL,WAAD,EAAcM,cAAd,IAAgCR,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACG,YAAD,EAAeM,eAAf,IAAkCT,QAAQ,CAAC,IAAD,CAAhD;AAEA,sBACC;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACC,QAAC,KAAD;AACC,MAAA,GAAG,EAAGU,IAAD,IACJA,IAAI,IACJC,UAAU,CAAC,MAAM;AAChBF,QAAAA,eAAe,CAACC,IAAI,CAACE,YAAN,CAAf;AACAJ,QAAAA,cAAc,CAACE,IAAI,CAACG,YAAN,CAAd;AACA,OAHS,EAGP,CAHO;AAHZ;AAAA;AAAA;AAAA;AAAA,YADD,eAUC,QAAC,SAAD;AAAW,MAAA,WAAW,EAAEX,WAAxB;AAAqC,MAAA,YAAY,EAAEC;AAAnD;AAAA;AAAA;AAAA;AAAA,YAVD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAcA;;IAlBQG,sB;;MAAAA,sB;AAoBT,eAAe,SAASQ,aAAT,CAAuBP,KAAvB,EAA8B;AAC5C,SAAO,mBAAM,QAAC,sBAAD;AAAwB,IAAA,KAAK,EAAEA;AAA/B;AAAA;AAAA;AAAA;AAAA,UAAb;AACA","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nfunction Scrollbar({ totalHeight, cappedHeight }) {\r\n\tconst [trackHeight, setTrackHeight] = useState(null);\r\n\r\n\tuseEffect(() => setTrackHeight((cappedHeight * cappedHeight) / totalHeight), [cappedHeight, totalHeight]);\r\n    \r\n\treturn <div className='scrollbar'></div>;\r\n}\r\n\r\nfunction WithScrollbarComponent({ Child }) {\r\n\tconst [totalHeight, setTotalHeight] = useState(null);\r\n\tconst [cappedHeight, setCappedHeight] = useState(null);\r\n\r\n\treturn (\r\n\t\t<div className='scrollable'>\r\n\t\t\t<Child\r\n\t\t\t\tref={(node) =>\r\n\t\t\t\t\tnode &&\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tsetCappedHeight(node.clientHeight);\r\n\t\t\t\t\t\tsetTotalHeight(node.scrollHeight);\r\n\t\t\t\t\t}, 2)\r\n\t\t\t\t}\r\n\t\t\t/>\r\n\t\t\t<Scrollbar totalHeight={totalHeight} cappedHeight={cappedHeight} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default function withScrollbar(Child) {\r\n\treturn () => <WithScrollbarComponent Child={Child} />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}