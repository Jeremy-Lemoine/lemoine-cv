{"ast":null,"code":"var _jsxFileName = \"D:\\\\Bureau\\\\Test React\\\\coman-app\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport \"./style.css\";\nimport React from \"react\";\nimport { useLocation } from \"react-router\";\nimport ReactDOM from \"react-dom\";\nimport Home from \"./pages/Home\";\nimport Other from \"./pages/Other\";\nimport NavigationBar from \"./NavigationBar\";\nimport { BrowserRouter, Route, Routes, Navigate } from \"react-router-dom\";\nimport { AnimatePresence } from \"framer-motion\"; // import { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Page() {\n  _s();\n\n  const location = useLocation();\n  const pagesList = [{\n    name: \"Home\",\n    path: \"/home\",\n    app: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 14\n    }, this)\n  }, {\n    name: \"Other\",\n    path: \"/other\",\n    app: /*#__PURE__*/_jsxDEV(Other, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 14\n    }, this)\n  }];\n\n  let getPagesRoutes = () => {\n    return pagesList.map(_ref => {\n      let {\n        name,\n        path,\n        app\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: path,\n        element: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"navbar\",\n            children: /*#__PURE__*/_jsxDEV(NavigationBar, {\n              currentPageName: name,\n              pagesList: pagesList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"app-container\",\n            children: app\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      exitBeforeEnter: true,\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        location: location,\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/home\",\n            state: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), getPagesRoutes()]\n      }, location.pathname, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Page, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c = Page;\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/_jsxDEV(Page, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 60,\n  columnNumber: 17\n}, this), rootElement);\n\nvar _c;\n\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"sources":["D:/Bureau/Test React/coman-app/src/index.js"],"names":["React","useLocation","ReactDOM","Home","Other","NavigationBar","BrowserRouter","Route","Routes","Navigate","AnimatePresence","Page","location","pagesList","name","path","app","getPagesRoutes","map","pathname","rootElement","document","getElementById","render"],"mappings":";;;AAAA,OAAO,aAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,EAAuCC,QAAvC,QAAuD,kBAAvD;AACA,SAASC,eAAT,QAAgC,eAAhC,C,CACA;;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AAEd,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AAEA,QAAMY,SAAS,GAAG,CAChB;AACIC,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,GAAG,eAAE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAHT,GADgB,EAMhB;AACIF,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,GAAG,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAHT,GANgB,CAAlB;;AAaA,MAAIC,cAAc,GAAG,MAAM;AACzB,WACEJ,SAAS,CAACK,GAAV,CAAe,QAAyB;AAAA,UAAxB;AAAEJ,QAAAA,IAAF;AAAQC,QAAAA,IAAR;AAAcC,QAAAA;AAAd,OAAwB;AACtC,0BACE,QAAC,KAAD;AAAkB,QAAA,IAAI,EAAED,IAAxB;AAA8B,QAAA,OAAO,eACnC;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,QAAf;AAAA,mCAAwB,QAAC,aAAD;AAAe,cAAA,eAAe,EAAED,IAAhC;AAAsC,cAAA,SAAS,EAAED;AAAjD;AAAA;AAAA;AAAA;AAAA;AAAxB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,sBAAgCG;AAAhC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,SAAYF,IAAZ;AAAA;AAAA;AAAA;AAAA,cADF;AAQD,KATD,CADF;AAYD,GAbD;;AAeA,sBACI,QAAC,aAAD;AAAA,2BACE,QAAC,eAAD;AAAiB,MAAA,eAAe,MAAhC;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAEF,QAAlB;AAAA,gCAEE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAsB,UAAA,OAAO,eAAE,QAAC,QAAD;AAAU,YAAA,EAAE,EAAC,OAAb;AAAqB,YAAA,KAAK;AAA1B;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAFF,EAIGK,cAAc,EAJjB;AAAA,SAAiCL,QAAQ,CAACO,QAA1C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAaD;;GA7CQR,I;UAEUV,W;;;KAFVU,I;AA+CT,MAAMS,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACApB,QAAQ,CAACqB,MAAT,eAAgB,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAA0BH,WAA1B","sourcesContent":["import \"./style.css\"\nimport React from \"react\"\nimport { useLocation } from \"react-router\"\nimport ReactDOM from \"react-dom\"\nimport Home from \"./pages/Home\"\nimport Other from \"./pages/Other\"\nimport NavigationBar from \"./NavigationBar\"\nimport { BrowserRouter, Route, Routes, Navigate } from \"react-router-dom\";\nimport { AnimatePresence } from \"framer-motion\"\n// import { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nfunction Page() {\n\n  const location = useLocation()\n\n  const pagesList = [\n    {\n        name: \"Home\",\n        path: \"/home\",\n        app: <Home />\n    },\n    {\n        name: \"Other\",\n        path: \"/other\",\n        app: <Other />\n    }\n  ]\n\n  let getPagesRoutes = () => {\n    return (\n      pagesList.map( ({ name, path, app }) => {\n        return (\n          <Route key={name} path={path} element={\n            <div className=\"page\">\n              <div className=\"navbar\"><NavigationBar currentPageName={name} pagesList={pagesList} /></div>\n              <div className=\"app-container\">{app}</div>\n            </div>\n          } />\n        )\n      })\n    )\n  }\n\n  return (\n      <BrowserRouter>\n        <AnimatePresence exitBeforeEnter>\n          <Routes location={location} key={location.pathname}>\n\n            <Route exact path=\"/\" element={<Navigate to=\"/home\" state/>} />\n            \n            {getPagesRoutes()}\n\n          </Routes>\n        </AnimatePresence>\n      </BrowserRouter>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\")\nReactDOM.render(<Page />, rootElement)"]},"metadata":{},"sourceType":"module"}