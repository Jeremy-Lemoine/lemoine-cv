{"ast":null,"code":"var _jsxFileName = \"D:\\\\Bureau\\\\Test React\\\\coman-app\\\\src\\\\pages\\\\Other.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport useLoaded from \"../utils/Loaded\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  MongoClient\n} = require('mongodb');\n\nfunction Other() {\n  _s();\n\n  const [text, setText] = useState(\"LOL\");\n\n  let loadedRender = () => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 39\n    }, this);\n  };\n\n  const [setIsLoaded, render] = useLoaded(loadedRender);\n  setIsLoaded(true);\n  return render();\n}\n\n_s(Other, \"prG++2mvS3UCt9qIDYttCLG+ORg=\", false, function () {\n  return [useLoaded];\n});\n\n_c = Other;\nexport default Other;\n\nvar _c;\n\n$RefreshReg$(_c, \"Other\");","map":{"version":3,"sources":["D:/Bureau/Test React/coman-app/src/pages/Other.jsx"],"names":["useState","useLoaded","MongoClient","require","Other","text","setText","loadedRender","setIsLoaded","render"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAkBC,OAAO,CAAC,SAAD,CAA/B;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AAEb,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBN,QAAQ,CAAC,KAAD,CAAlC;;AAEA,MAAIO,YAAY,GAAG,MAAM;AAAE,wBAAO;AAAA,gBAAIF;AAAJ;AAAA;AAAA;AAAA;AAAA,YAAP;AAAsB,GAAjD;;AAEA,QAAM,CAAEG,WAAF,EAAeC,MAAf,IAA0BR,SAAS,CAACM,YAAD,CAAzC;AAEAC,EAAAA,WAAW,CAAC,IAAD,CAAX;AAEA,SAAOC,MAAM,EAAb;AAGH;;GAbQL,K;UAM2BH,S;;;KAN3BG,K;AAeT,eAAeA,KAAf","sourcesContent":["import { useState } from \"react\";\r\nimport useLoaded from \"../utils/Loaded\";\r\n\r\nconst { MongoClient } = require('mongodb');\r\n\r\nfunction Other() {\r\n\r\n    const [ text, setText ] = useState(\"LOL\")\r\n\r\n    let loadedRender = () => { return <p>{text}</p> }\r\n\r\n    const [ setIsLoaded, render ] = useLoaded(loadedRender)\r\n\r\n    setIsLoaded(true);\r\n\r\n    return render();\r\n\r\n\r\n}\r\n\r\nexport default Other;"]},"metadata":{},"sourceType":"module"}