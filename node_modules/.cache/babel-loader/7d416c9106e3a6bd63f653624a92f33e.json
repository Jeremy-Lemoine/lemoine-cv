{"ast":null,"code":"var _jsxFileName = \"D:\\\\Bureau\\\\Test React\\\\coman-app\\\\src\\\\pages\\\\settings\\\\Language.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { MouseEventHandler, useState } from 'react';\nimport Select, { components, ControlProps, Props, StylesConfig } from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EMOJIS = ['👍', '🤙', '👏', '👌', '🙌', '✌️', '🖖', '👐'];\n\nconst Control = _ref => {\n  let {\n    children,\n    ...props\n  } = _ref;\n  // @ts-ignore\n  const {\n    emoji,\n    onEmojiClick\n  } = props.selectProps;\n  const style = {\n    cursor: 'pointer'\n  };\n  return /*#__PURE__*/_jsxDEV(components.Control, { ...props,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      onMouseDown: onEmojiClick,\n      style: style,\n      children: emoji\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Control;\n\nconst CustomSelectProps = props => {\n  _s();\n\n  const [clickCount, setClickCount] = useState(0);\n\n  const onClick = e => {\n    setClickCount(clickCount + 1);\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  const styles = {\n    control: css => ({ ...css,\n      paddingLeft: '1rem'\n    })\n  };\n  const emoji = EMOJIS[clickCount % EMOJIS.length];\n  return /*#__PURE__*/_jsxDEV(Select, { ...props,\n    // @ts-ignore\n    emoji: emoji,\n    onEmojiClick: onClick,\n    components: {\n      Control\n    },\n    isSearchable: true,\n    name: \"emoji\",\n    options: [{\n      value: 'red',\n      label: 'Red'\n    }, {\n      value: 'blue',\n      label: 'Blue'\n    }],\n    styles: styles\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CustomSelectProps, \"lP0RdHHRli8a2nfaqf9UO7BUSv0=\");\n\n_c2 = CustomSelectProps;\nexport default CustomSelectProps;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Control\");\n$RefreshReg$(_c2, \"CustomSelectProps\");","map":{"version":3,"sources":["D:/Bureau/Test React/coman-app/src/pages/settings/Language.jsx"],"names":["React","MouseEventHandler","useState","Select","components","ControlProps","Props","StylesConfig","EMOJIS","Control","children","props","emoji","onEmojiClick","selectProps","style","cursor","CustomSelectProps","clickCount","setClickCount","onClick","e","preventDefault","stopPropagation","styles","control","css","paddingLeft","length","value","label"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,iBAAhB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,MAAP,IACEC,UADF,EAEEC,YAFF,EAGEC,KAHF,EAIEC,YAJF,QAKO,cALP;;AAOA,MAAMC,MAAM,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,CAAf;;AAEA,MAAMC,OAAO,GAAG,QAA4B;AAAA,MAA3B;AAAEC,IAAAA,QAAF;AAAY,OAAGC;AAAf,GAA2B;AAC1C;AACA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAA0BF,KAAK,CAACG,WAAtC;AACA,QAAMC,KAAK,GAAG;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAd;AAEA,sBACE,QAAC,UAAD,CAAY,OAAZ,OAAwBL,KAAxB;AAAA,4BACE;AAAM,MAAA,WAAW,EAAEE,YAAnB;AAAiC,MAAA,KAAK,EAAEE,KAAxC;AAAA,gBACGH;AADH;AAAA;AAAA;AAAA;AAAA,YADF,EAIGF,QAJH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAbD;;KAAMD,O;;AAeN,MAAMQ,iBAAiB,GAAIN,KAAD,IAAW;AAAA;;AACnC,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAAC,CAAD,CAA5C;;AAEA,QAAMkB,OAAO,GAAIC,CAAD,IAAO;AACrBF,IAAAA,aAAa,CAACD,UAAU,GAAG,CAAd,CAAb;AACAG,IAAAA,CAAC,CAACC,cAAF;AACAD,IAAAA,CAAC,CAACE,eAAF;AACD,GAJD;;AAMA,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAGC,GAAD,KAAU,EAAE,GAAGA,GAAL;AAAUC,MAAAA,WAAW,EAAE;AAAvB,KAAV;AADI,GAAf;AAIA,QAAMf,KAAK,GAAGJ,MAAM,CAACU,UAAU,GAAGV,MAAM,CAACoB,MAArB,CAApB;AAEA,sBACE,QAAC,MAAD,OACMjB,KADN;AAEE;AACA,IAAA,KAAK,EAAEC,KAHT;AAIE,IAAA,YAAY,EAAEQ,OAJhB;AAKE,IAAA,UAAU,EAAE;AAAEX,MAAAA;AAAF,KALd;AAME,IAAA,YAAY,MANd;AAOE,IAAA,IAAI,EAAC,OAPP;AAQE,IAAA,OAAO,EAAE,CACL;AAACoB,MAAAA,KAAK,EAAE,KAAR;AAAeC,MAAAA,KAAK,EAAE;AAAtB,KADK,EAEL;AAACD,MAAAA,KAAK,EAAE,MAAR;AAAgBC,MAAAA,KAAK,EAAE;AAAvB,KAFK,CARX;AAYE,IAAA,MAAM,EAAEN;AAZV;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA/BD;;GAAMP,iB;;MAAAA,iB;AAiCN,eAAeA,iBAAf","sourcesContent":["import React, { MouseEventHandler, useState } from 'react';\r\nimport Select, {\r\n  components,\r\n  ControlProps,\r\n  Props,\r\n  StylesConfig,\r\n} from 'react-select';\r\n\r\nconst EMOJIS = ['👍', '🤙', '👏', '👌', '🙌', '✌️', '🖖', '👐'];\r\n\r\nconst Control = ({ children, ...props }) => {\r\n  // @ts-ignore\r\n  const { emoji, onEmojiClick } = props.selectProps;\r\n  const style = { cursor: 'pointer' };\r\n\r\n  return (\r\n    <components.Control {...props}>\r\n      <span onMouseDown={onEmojiClick} style={style}>\r\n        {emoji}\r\n      </span>\r\n      {children}\r\n    </components.Control>\r\n  );\r\n};\r\n\r\nconst CustomSelectProps = (props) => {\r\n  const [clickCount, setClickCount] = useState(0);\r\n\r\n  const onClick = (e) => {\r\n    setClickCount(clickCount + 1);\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n  };\r\n\r\n  const styles = {\r\n    control: (css) => ({ ...css, paddingLeft: '1rem' }),\r\n  };\r\n\r\n  const emoji = EMOJIS[clickCount % EMOJIS.length];\r\n\r\n  return (\r\n    <Select\r\n      {...props}\r\n      // @ts-ignore\r\n      emoji={emoji}\r\n      onEmojiClick={onClick}\r\n      components={{ Control }}\r\n      isSearchable\r\n      name=\"emoji\"\r\n      options={[\r\n          {value: 'red', label: 'Red'},\r\n          {value: 'blue', label: 'Blue'}\r\n      ]}\r\n      styles={styles}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CustomSelectProps;"]},"metadata":{},"sourceType":"module"}