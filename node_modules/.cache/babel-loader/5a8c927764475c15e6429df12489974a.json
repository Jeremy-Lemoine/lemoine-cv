{"ast":null,"code":"var _jsxFileName = \"D:\\\\Bureau\\\\Test React\\\\coman-app\\\\src\\\\NavigationBar.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { motion } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NavigationBar(props) {\n  _s();\n\n  const navigate = useNavigate();\n  const pagesList = props.pagesList;\n  const [currentPageName, setCurrentPageName] = useState(props.currentPageName);\n  useEffect(() => {\n    setCurrentPageName(props.currentPageName);\n  }, [props.currentPageName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(motion.div, {\n      exit: {\n        y: '-100%'\n      },\n      animate: {\n        y: 0\n      },\n      initial: {\n        y: '-100%'\n      },\n      transition: {\n        duration: 0.5,\n        delay: 0.6\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: pagesList.slice().reverse().filter(page => !page.hidden).map(_ref => {\n            let {\n              name,\n              path\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: name === currentPageName ? \"active\" : \"\",\n              onClick: () => navigate(path),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 33\n              }, this)\n            }, name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n      exit: {\n        x: '+140%'\n      },\n      animate: {\n        x: 0\n      },\n      initial: {\n        x: '-180%'\n      },\n      transition: {\n        duration: 1\n      },\n      children: currentPageName ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-title\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"droit\",\n          children: pagesList.find(page => page.name === currentPageName).title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }, this) : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 13\n  }, this);\n}\n\n_s(NavigationBar, \"IffH84K7X/HXA15dI1V/PlDwchg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = NavigationBar;\nexport default NavigationBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavigationBar\");","map":{"version":3,"sources":["D:/Bureau/Test React/coman-app/src/NavigationBar.jsx"],"names":["useEffect","useState","useNavigate","motion","NavigationBar","props","navigate","pagesList","currentPageName","setCurrentPageName","y","duration","delay","slice","reverse","filter","page","hidden","map","name","path","x","find","title"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,MAAT,QAAuB,eAAvB;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAE1B,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AAEA,QAAMK,SAAS,GAAGF,KAAK,CAACE,SAAxB;AACA,QAAM,CAAEC,eAAF,EAAmBC,kBAAnB,IAA0CR,QAAQ,CAACI,KAAK,CAACG,eAAP,CAAxD;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,kBAAkB,CAACJ,KAAK,CAACG,eAAP,CAAlB;AACH,GAFQ,EAEN,CAACH,KAAK,CAACG,eAAP,CAFM,CAAT;AAIA,sBAAQ;AAAA,4BACJ,QAAC,MAAD,CAAQ,GAAR;AACA,MAAA,IAAI,EAAE;AAACE,QAAAA,CAAC,EAAE;AAAJ,OADN;AAEA,MAAA,OAAO,EAAE;AAACA,QAAAA,CAAC,EAAE;AAAJ,OAFT;AAGA,MAAA,OAAO,EAAE;AAACA,QAAAA,CAAC,EAAE;AAAJ,OAHT;AAIA,MAAA,UAAU,EAAE;AAACC,QAAAA,QAAQ,EAAE,GAAX;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OAJZ;AAAA,6BAMI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACI;AAAA,oBAEIL,SAAS,CAACM,KAAV,GAAkBC,OAAlB,GAA4BC,MAA5B,CAAmCC,IAAI,IAAI,CAACA,IAAI,CAACC,MAAjD,EAAyDC,GAAzD,CAA6D,QAAkB;AAAA,gBAAjB;AAACC,cAAAA,IAAD;AAAOC,cAAAA;AAAP,aAAiB;AAC3E,gCACI;AAAe,cAAA,SAAS,EAAED,IAAI,KAAKX,eAAT,GAA2B,QAA3B,GAAsC,EAAhE;AAAoE,cAAA,OAAO,EAAE,MAAMF,QAAQ,CAACc,IAAD,CAA3F;AAAA,qCACI;AAAA,0BAAOD;AAAP;AAAA;AAAA;AAAA;AAAA;AADJ,eAASA,IAAT;AAAA;AAAA;AAAA;AAAA,oBADJ;AAKH,WAND;AAFJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,YADI,eAqBJ,QAAC,MAAD,CAAQ,GAAR;AACA,MAAA,IAAI,EAAE;AAACE,QAAAA,CAAC,EAAE;AAAJ,OADN;AAEA,MAAA,OAAO,EAAE;AAACA,QAAAA,CAAC,EAAE;AAAJ,OAFT;AAGA,MAAA,OAAO,EAAE;AAACA,QAAAA,CAAC,EAAE;AAAJ,OAHT;AAIA,MAAA,UAAU,EAAE;AAACV,QAAAA,QAAQ,EAAE;AAAX,OAJZ;AAAA,gBAOQH,eAAe,gBAEP;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACI;AAAM,UAAA,SAAS,EAAC,OAAhB;AAAA,oBAAyBD,SAAS,CAACe,IAAV,CAAeN,IAAI,IAAIA,IAAI,CAACG,IAAL,KAAcX,eAArC,EAAsDe;AAA/E;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFO,GAOX;AAdZ;AAAA;AAAA;AAAA;AAAA,YArBI;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAyCH;;GApDQnB,a;UAEYF,W;;;KAFZE,a;AAsDT,eAAeA,aAAf","sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport { useNavigate } from \"react-router\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nfunction NavigationBar(props) {\r\n\r\n    const navigate = useNavigate();\r\n    \r\n    const pagesList = props.pagesList;\r\n    const [ currentPageName, setCurrentPageName ] = useState(props.currentPageName);\r\n\r\n    useEffect(() => {\r\n        setCurrentPageName(props.currentPageName)\r\n    }, [props.currentPageName])\r\n\r\n    return (<div>\r\n        <motion.div\r\n        exit={{y: '-100%'}}\r\n        animate={{y: 0}}\r\n        initial={{y: '-100%'}}\r\n        transition={{duration: 0.5, delay: 0.6}}\r\n        >\r\n            <div className=\"navigation-bar\">\r\n                <ul>\r\n                {   \r\n                    pagesList.slice().reverse().filter(page => !page.hidden).map(({name, path}) => {\r\n                        return (\r\n                            <li key={name} className={name === currentPageName ? \"active\" : \"\"} onClick={() => navigate(path)} >\r\n                                <span>{name}</span>\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n                </ul>\r\n            </div>\r\n        </motion.div>\r\n        <motion.div\r\n        exit={{x: '+140%'}}\r\n        animate={{x: 0}}\r\n        initial={{x: '-180%'}}\r\n        transition={{duration: 1}}\r\n        >\r\n            {\r\n                currentPageName ? \r\n                    (\r\n                        <div className=\"left-title\">\r\n                            <span className=\"droit\">{pagesList.find(page => page.name === currentPageName).title}</span>\r\n                        </div>\r\n                    )\r\n                    :\r\n                    \"\"\r\n            }\r\n        </motion.div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default NavigationBar;"]},"metadata":{},"sourceType":"module"}