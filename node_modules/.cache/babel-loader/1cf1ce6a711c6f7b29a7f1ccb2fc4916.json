{"ast":null,"code":"var _jsxFileName = \"D:\\\\Bureau\\\\Test React\\\\coman-app\\\\src\\\\pages\\\\Other.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport database from \"../utils/database\";\nimport Loading from \"../utils/Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Other() {\n  _s();\n\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [objects, setObjects] = useState({});\n  database.searchItems('qqch', {\n    LOL: 'haha'\n  }).then(array => {\n    setObjects(array);\n    setIsLoaded(true);\n  });\n  return isLoaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: objects\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 23\n  }, this) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 46\n  }, this);\n}\n\n_s(Other, \"DlIhEEB3CFJxOBUsjUFGwdL9txQ=\");\n\n_c = Other;\nexport default Other;\n\nvar _c;\n\n$RefreshReg$(_c, \"Other\");","map":{"version":3,"sources":["D:/Bureau/Test React/coman-app/src/pages/Other.jsx"],"names":["useState","database","Loading","Other","isLoaded","setIsLoaded","objects","setObjects","searchItems","LOL","then","array"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,OAAP,MAAoB,kBAApB;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AAEb,QAAM,CAAEC,QAAF,EAAYC,WAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAAEM,OAAF,EAAWC,UAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,QAAQ,CAACO,WAAT,CAAqB,MAArB,EAA6B;AAACC,IAAAA,GAAG,EAAE;AAAN,GAA7B,EAA4CC,IAA5C,CAAkDC,KAAK,IAAI;AACvDJ,IAAAA,UAAU,CAACI,KAAD,CAAV;AACAN,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAHD;AAKA,SAAOD,QAAQ,gBAAG;AAAA,cAAME;AAAN;AAAA;AAAA;AAAA;AAAA,UAAH,gBAA0B,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAzC;AAEH;;GAZQH,K;;KAAAA,K;AAcT,eAAeA,KAAf","sourcesContent":["import { useState } from \"react\";\r\nimport database from \"../utils/database\";\r\nimport Loading from \"../utils/Loading\";\r\n\r\nfunction Other() {\r\n\r\n    const [ isLoaded, setIsLoaded ] = useState(false)\r\n    const [ objects, setObjects ] = useState({})\r\n\r\n    database.searchItems('qqch', {LOL: 'haha'}).then( array => {\r\n        setObjects(array);\r\n        setIsLoaded(true);\r\n    })\r\n\r\n    return isLoaded ? <div>{objects}</div> : <Loading />\r\n\r\n}\r\n\r\nexport default Other;"]},"metadata":{},"sourceType":"module"}