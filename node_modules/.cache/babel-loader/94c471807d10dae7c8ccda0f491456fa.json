{"ast":null,"code":"var _jsxFileName = \"D:\\\\Bureau\\\\Test React\\\\coman-app\\\\src\\\\NavigationBar.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, Fragment } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { motion } from \"framer-motion\";\nimport { SiBandsintown } from \"react-icons/si\";\nimport Logo from './utils/Logo';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { FiLogIn } from 'react-icons/fi';\nimport Loading from \"./utils/Loading\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NavigationBar(props) {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    user,\n    isLoading,\n    isAuthenticated,\n    loginWithRedirect,\n    logout\n  } = useAuth0();\n  const {\n    t\n  } = useTranslation();\n  const pagesList = props.pagesList;\n  const [currentPageName, setCurrentPageName] = useState(props.currentPageName);\n\n  const loginIcon = /*#__PURE__*/_jsxDEV(FiLogIn, {\n    style: {\n      verticalAlign: 'top',\n      paddingTop: '10%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 23\n  }, this);\n\n  useEffect(() => {\n    setCurrentPageName(props.currentPageName);\n  }, [props.currentPageName]);\n\n  const getAuthAction = () => {\n    if (!isLoading) {\n      const [label, state, icon, action] = isAuthenticated ? [t('disconnect_label'), 'logout', /*#__PURE__*/_jsxDEV(\"img\", {\n        src: user.picture,\n        style: {\n          verticalAlign: 'top',\n          marginTop: '10%',\n          borderRadius: '50%',\n          border: '2px solid gray',\n          width: 'calc(2 * var(--navbar-item-text-font-size))'\n        },\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 52\n      }, this), () => logout({\n        returnTo: window.location.origin + '/home'\n      })] : [t('connection_label'), 'login', loginIcon, loginWithRedirect];\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"right\",\n        onClick: () => action(),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nav-bar-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nav-bar-item-icon\",\n            children: icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nav-bar-item-text\",\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, state, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"right\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nav-bar-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nav-bar-item-icon\",\n            children: /*#__PURE__*/_jsxDEV(Loading, {\n              height: 'calc(var(--navigation-bar-height) * 0.8)',\n              width: 'calc(var(--navigation-bar-height) * 0.8)'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 60\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nav-bar-item-text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, 'loadingauth0', false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(motion.div, {\n      exit: {\n        y: '-100%'\n      },\n      animate: {\n        y: 0\n      },\n      initial: {\n        y: '-100%'\n      },\n      transition: {\n        duration: 0.5,\n        delay: 0.6\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              float: 'left'\n            },\n            children: /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this), getAuthAction(), pagesList.slice().reverse().filter(page => !page.hidden).map(_ref => {\n            let {\n              name,\n              path,\n              icon\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: name === currentPageName ? \"active right\" : \"right\",\n              onClick: () => navigate(path),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"nav-bar-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"nav-bar-item-icon\",\n                  children: icon\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"nav-bar-item-text\",\n                  children: t(name)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 37\n              }, this)\n            }, name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 33\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n      exit: {\n        x: '+140%'\n      },\n      animate: {\n        x: 0\n      },\n      initial: {\n        x: '-180%'\n      },\n      transition: {\n        duration: 1.5\n      },\n      children: currentPageName ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-title\",\n        children: [/*#__PURE__*/_jsxDEV(SiBandsintown, {\n          style: {\n            marginLeft: '5vw',\n            marginRight: '10vw',\n            fontSize: 'var(--title-icon-size)',\n            color: 'var(--orange)'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this), t(pagesList.find(page => page.name === currentPageName).title)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }, this) : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 13\n  }, this);\n}\n\n_s(NavigationBar, \"McbxJZsx/oPPqY/zPpLZquZNg2Q=\", false, function () {\n  return [useNavigate, useAuth0, useTranslation];\n});\n\n_c = NavigationBar;\nexport default NavigationBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavigationBar\");","map":{"version":3,"sources":["D:/Bureau/Test React/coman-app/src/NavigationBar.jsx"],"names":["useEffect","useState","Fragment","useNavigate","motion","SiBandsintown","Logo","useAuth0","FiLogIn","Loading","useTranslation","NavigationBar","props","navigate","user","isLoading","isAuthenticated","loginWithRedirect","logout","t","pagesList","currentPageName","setCurrentPageName","loginIcon","verticalAlign","paddingTop","getAuthAction","label","state","icon","action","picture","marginTop","borderRadius","border","width","returnTo","window","location","origin","y","duration","delay","float","slice","reverse","filter","page","hidden","map","name","path","x","marginLeft","marginRight","fontSize","color","find","title"],"mappings":"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","sourcesContent":["import { useEffect, useState, Fragment } from \"react\"\r\nimport { useNavigate } from \"react-router\"\r\nimport { motion } from \"framer-motion\"\r\nimport { SiBandsintown } from \"react-icons/si\"\r\nimport Logo from './utils/Logo'\r\nimport { useAuth0 } from '@auth0/auth0-react'\r\nimport { FiLogIn } from 'react-icons/fi'\r\nimport Loading from \"./utils/Loading\"\r\nimport { useTranslation } from \"react-i18next\"\r\n\r\nfunction NavigationBar(props) {\r\n\r\n    const navigate = useNavigate();\r\n    const { user, isLoading, isAuthenticated, loginWithRedirect, logout } = useAuth0();\r\n    \r\n    const { t } = useTranslation();\r\n\r\n    const pagesList = props.pagesList;\r\n    const [ currentPageName, setCurrentPageName ] = useState(props.currentPageName);\r\n\r\n    const loginIcon = <FiLogIn style={{verticalAlign: 'top', paddingTop: '10%'}}/>;\r\n\r\n    useEffect(() => {\r\n        setCurrentPageName(props.currentPageName)\r\n    }, [props.currentPageName])\r\n\r\n    const getAuthAction = () => {\r\n        if (!isLoading) {\r\n            const [ label, state, icon, action ] = isAuthenticated ? \r\n                [ t('disconnect_label'), 'logout', <img \r\n                                                    src={user.picture}\r\n                                                    style={{\r\n                                                        verticalAlign: 'top',\r\n                                                        marginTop: '10%',\r\n                                                        borderRadius: '50%',\r\n                                                        border: '2px solid gray',\r\n                                                        width: 'calc(2 * var(--navbar-item-text-font-size))'\r\n                                                    }}\r\n                                                    alt=\"\"\r\n                                                />, () => logout({returnTo: window.location.origin + '/home'}) ] : \r\n                [ t('connection_label'), 'login', loginIcon, loginWithRedirect ];\r\n            return (\r\n                <li key={state}\r\n                    className=\"right\" onClick={() => action()} >\r\n                    <div className=\"nav-bar-item\">\r\n                        <div className=\"nav-bar-item-icon\">{icon}</div>\r\n                        <div className=\"nav-bar-item-text\">{label}</div>\r\n                    </div>\r\n                </li>\r\n            )\r\n        } else {\r\n            return (\r\n                <li key={'loadingauth0'}\r\n                    className=\"right\" >\r\n                    <div className=\"nav-bar-item\">\r\n                        <div className=\"nav-bar-item-icon\"><Loading \r\n                            height={'calc(var(--navigation-bar-height) * 0.8)'}\r\n                            width={'calc(var(--navigation-bar-height) * 0.8)'}/></div>\r\n                        <div className=\"nav-bar-item-text\"></div>\r\n                    </div>\r\n                </li>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (<Fragment>\r\n        <motion.div\r\n        exit={{y: '-100%'}}\r\n        animate={{y: 0}}\r\n        initial={{y: '-100%'}}\r\n        transition={{duration: 0.5, delay: 0.6}}\r\n        >\r\n            <div className=\"navigation-bar\">\r\n                <ul>\r\n                    {/* Le logo de l'app */}\r\n                    <li style={{float: 'left'}}>\r\n                        <Logo />\r\n                    </li>\r\n                    {getAuthAction()}\r\n                    {/* La liste des pages à droite */}\r\n                    {   \r\n                        pagesList.slice().reverse().filter(page => !page.hidden).map(({name, path, icon}) => {\r\n                            return (\r\n                                <li key={name}\r\n                                className={name === currentPageName ? \"active right\" : \"right\"} onClick={() => navigate(path)} >\r\n                                    <div className=\"nav-bar-item\">\r\n                                        <div className=\"nav-bar-item-icon\">{icon}</div>\r\n                                        <div className=\"nav-bar-item-text\">{t(name)}</div>\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </motion.div>\r\n        <motion.div\r\n        exit={{x: '+140%'}}\r\n        animate={{x: 0}}\r\n        initial={{x: '-180%'}}\r\n        transition={{duration: 1.5}}\r\n        >\r\n            {\r\n                currentPageName ? \r\n                    (\r\n                        <div className=\"left-title\">\r\n                        <SiBandsintown style={{\r\n                                marginLeft: '5vw',\r\n                                marginRight: '10vw',\r\n                                fontSize: 'var(--title-icon-size)',\r\n                                color: 'var(--orange)'\r\n                            }}/>\r\n                            {t(pagesList.find(page => page.name === currentPageName).title)}\r\n                        </div>\r\n                    )\r\n                    :\r\n                    \"\"\r\n            }\r\n        </motion.div>\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default NavigationBar;"]},"metadata":{},"sourceType":"module"}