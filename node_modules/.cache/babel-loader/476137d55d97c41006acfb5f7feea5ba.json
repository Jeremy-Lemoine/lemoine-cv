{"ast":null,"code":"var _jsxFileName = \"D:\\\\Bureau\\\\Test React\\\\coman-app\\\\src\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./styles/style.css\";\nimport React from \"react\";\nimport { useLocation } from \"react-router\";\nimport ReactDOM from \"react-dom\";\nimport NavigationBar from \"./NavigationBar\";\nimport { BrowserRouter, Route, Routes, Navigate } from \"react-router-dom\";\nimport { AnimatePresence } from \"framer-motion\";\nimport { WrapFondu } from \"./utils/appTemplates\";\nimport database from \"./utils/database\";\nimport pagesList from \"./pages/pagesList\";\nimport { Auth0Provider } from '@auth0/auth0-react';\nimport { useMediaQuery } from 'react-responsive';\nimport updateCSS from \"./styles/responsive\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst auth0Domain = process.env.REACT_APP_AUTH0_DOMAIN;\nconst auth0ClientId = process.env.REACT_APP_AUTH0_CLIENTID;\n\nfunction Page() {\n  _s();\n\n  const isMobileDevice = useMediaQuery({\n    query: \"(min-device-width: 480px)\"\n  });\n  const isTabletDevice = useMediaQuery({\n    query: \"(min-device-width: 768px)\"\n  });\n  const isLaptop = useMediaQuery({\n    query: \"(min-device-width: 1024px)\"\n  });\n  const isDesktop = useMediaQuery({\n    query: \"(min-device-width: 1200px)\"\n  });\n  const isBigScreen = useMediaQuery({\n    query: \"(min-device-width: 1201px )\"\n  });\n  updateCSS('verySmall');\n\n  if (isMobileDevice) {\n    updateCSS('mobile');\n  }\n\n  if (isTabletDevice) {\n    updateCSS('tablet');\n  }\n\n  if (isLaptop) {\n    updateCSS('laptop');\n  }\n\n  if (isDesktop) {\n    updateCSS('desktop');\n  }\n\n  if (isBigScreen) {\n    updateCSS('bigScreen');\n  }\n\n  window.addEventListener(\"beforeunload\", ev => {\n    database.disconnect();\n  });\n  const location = useLocation();\n\n  let getPagesRoutes = () => {\n    return pagesList.map(_ref => {\n      let {\n        name,\n        path,\n        app\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: path,\n        element: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page\",\n          children: [/*#__PURE__*/_jsxDEV(NavigationBar, {\n            currentPageName: name,\n            pagesList: pagesList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(WrapFondu, {\n            app: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"app-container\",\n              children: ['rien', isMobileDevice && ' - mobile', isTabletDevice && ' - tablet', isLaptop && ' - laptop', isDesktop && ' - desktop', isBigScreen && ' - bigScreen', app]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(AnimatePresence, {\n    exitBeforeEnter: true,\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      location: location,\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/home\",\n          state: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), getPagesRoutes(), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/pageNotFound\",\n          state: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)]\n    }, location.pathname, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Page, \"t23hseOF7vPCDjgP5uzKyNkmy7w=\", false, function () {\n  return [useMediaQuery, useMediaQuery, useMediaQuery, useMediaQuery, useMediaQuery, useLocation];\n});\n\n_c = Page;\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/_jsxDEV(BrowserRouter, {\n  children: /*#__PURE__*/_jsxDEV(Auth0Provider, {\n    domain: auth0Domain,\n    clientId: auth0ClientId,\n    redirectUri: window.location.origin + \"/home\",\n    children: /*#__PURE__*/_jsxDEV(Page, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 90,\n  columnNumber: 3\n}, this), rootElement);\n\nvar _c;\n\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"sources":["D:/Bureau/Test React/coman-app/src/index.jsx"],"names":["React","useLocation","ReactDOM","NavigationBar","BrowserRouter","Route","Routes","Navigate","AnimatePresence","WrapFondu","database","pagesList","Auth0Provider","useMediaQuery","updateCSS","auth0Domain","process","env","REACT_APP_AUTH0_DOMAIN","auth0ClientId","REACT_APP_AUTH0_CLIENTID","Page","isMobileDevice","query","isTabletDevice","isLaptop","isDesktop","isBigScreen","window","addEventListener","ev","disconnect","location","getPagesRoutes","map","name","path","app","pathname","rootElement","document","getElementById","render","origin"],"mappings":"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","sourcesContent":["import \"./styles/style.css\"\nimport React from \"react\"\nimport { useLocation } from \"react-router\"\nimport ReactDOM from \"react-dom\"\nimport NavigationBar from \"./NavigationBar\"\nimport { BrowserRouter, Route, Routes, Navigate } from \"react-router-dom\"\nimport { AnimatePresence } from \"framer-motion\"\nimport { WrapFondu } from \"./utils/appTemplates\"\nimport database from \"./utils/database\"\nimport pagesList from \"./pages/pagesList\"\nimport { Auth0Provider } from '@auth0/auth0-react'\nimport { useMediaQuery } from 'react-responsive';\nimport updateCSS from \"./styles/responsive\"\n\nconst auth0Domain = process.env.REACT_APP_AUTH0_DOMAIN;\nconst auth0ClientId = process.env.REACT_APP_AUTH0_CLIENTID;\n\nfunction Page() {\n\n  const isMobileDevice = useMediaQuery({query: \"(min-device-width: 480px)\",});\n  const isTabletDevice = useMediaQuery({query: \"(min-device-width: 768px)\",});\n  const isLaptop = useMediaQuery({query: \"(min-device-width: 1024px)\",});\n  const isDesktop = useMediaQuery({query: \"(min-device-width: 1200px)\",});\n  const isBigScreen = useMediaQuery({query: \"(min-device-width: 1201px )\",});\n\n  updateCSS('verySmall');\n  if(isMobileDevice) {\n    updateCSS('mobile');\n  }\n  if(isTabletDevice) {\n    updateCSS('tablet');\n  }\n  if(isLaptop) {\n    updateCSS('laptop');\n  }\n  if(isDesktop) {\n    updateCSS('desktop');\n  }\n  if(isBigScreen) {\n    updateCSS('bigScreen');\n  }\n\n  window.addEventListener(\"beforeunload\", (ev) => \n  {  \n      database.disconnect();\n  });\n\n  const location = useLocation()\n\n  let getPagesRoutes = () => {\n    return (\n      pagesList.map( ({ name, path, app }) => {\n        return (\n          <Route key={name} path={path} element={\n            <div className=\"page\">\n              <NavigationBar currentPageName={name} pagesList={pagesList} />\n              <WrapFondu app={<div className=\"app-container\">\n              {'rien'}\n              {(isMobileDevice && ' - mobile')}\n              {(isTabletDevice && ' - tablet')}\n              {(isLaptop && ' - laptop')}\n              {(isDesktop && ' - desktop')}\n              {(isBigScreen && ' - bigScreen')}\n                {app}</div>} />\n            </div>\n          } />\n        )\n      })\n    )\n  }\n\n  return (\n        <AnimatePresence exitBeforeEnter>\n          <Routes location={location} key={location.pathname}>\n\n            <Route exact path=\"/\" element={<Navigate to=\"/home\" state/>} />\n\n            {getPagesRoutes()}\n\n            <Route path=\"*\" element={<Navigate to=\"/pageNotFound\" state/>} />\n            \n          </Routes>\n        </AnimatePresence>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\")\nReactDOM.render(\n  \n  <BrowserRouter>\n    <Auth0Provider\n      domain={auth0Domain}\n      clientId={auth0ClientId}\n      redirectUri={window.location.origin + \"/home\"}\n    >\n      <Page />\n    </Auth0Provider>\n  </BrowserRouter>\n  , rootElement)"]},"metadata":{},"sourceType":"module"}