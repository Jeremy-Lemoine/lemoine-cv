{"ast":null,"code":"var _jsxFileName = \"D:\\\\Bureau\\\\Projets Perso\\\\React APP\\\\coman-app\\\\src\\\\pages\\\\Machines.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useCallback } from \"react\";\nimport { BsFillCheckSquareFill, BsFillStopwatchFill } from \"react-icons/bs\";\nimport { useTranslation } from \"react-i18next\";\nimport axios from \"axios\";\nimport Loading from \"../utils/components/Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst num = \"selecteur_machine\";\nconst type = \"nom_type\";\nconst statut = \"status\";\nconst tempsRestant = \"time_before_off\";\n\nfunction Machines() {\n  _s();\n\n  const [machinesData, setMachinesData] = useState({\n    isLoading: true,\n    data: {}\n  });\n  const {\n    t\n  } = useTranslation();\n  const [loadRepeator, setLoadRepeator] = useState(null);\n  const {\n    washing_machine,\n    dryer,\n    number,\n    type: typeText,\n    status,\n    time_remaining\n  } = t(\"machines_page\", {\n    returnObjects: true\n  });\n  let loadData = useCallback(() => {\n    // Load the fake API that loads the real one through Python Backend\n    // to bypass CORS Cross-Origin errors\n    axios.get(\"https://coman-machines-api.herokuapp.com\").then(reponse => {\n      setMachinesData({\n        isLoading: false,\n        data: reponse.data.machine_info_status.machine_list\n      });\n    });\n  }, []);\n  useEffect(() => {\n    if (!loadRepeator) {\n      loadData();\n      setLoadRepeator(setInterval(loadData, 5000));\n    }\n\n    return () => {\n      clearInterval(loadRepeator);\n    };\n  }, [loadRepeator, loadData]);\n\n  let timeFormat = secondes => {\n    const minutes = Math.floor(secondes / 60);\n    const newSecondes = secondes - minutes * 60;\n    const minutesString = minutes < 10 ? `0${minutes}` : `${minutes}`;\n    const newSecondesString = newSecondes < 10 ? `0${newSecondes}` : `${newSecondes}`;\n    return minutesString + \":\" + newSecondesString;\n  };\n\n  return /*#__PURE__*/_jsxDEV(FadeProps, {\n    children: machinesData.isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 3\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"pretty-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: typeText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: time_remaining\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: machinesData.data.map(machine => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: machine[num]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: machine[type].trim().startsWith(\"L\") ? washing_machine : dryer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: machine[statut] === 1 ? /*#__PURE__*/_jsxDEV(BsFillCheckSquareFill, {\n                style: {\n                  color: \"var(--lighter-green)\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 10\n              }, this) : /*#__PURE__*/_jsxDEV(BsFillStopwatchFill, {\n                style: {\n                  color: \"var(--orange)\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: machine[statut] === 1 ? \"-\" : timeFormat(machine[tempsRestant])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 8\n            }, this)]\n          }, machine[num], true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 7\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Machines, \"xAH9kvQ3/T6lQOhK2Ij0nRnzn5k=\", false, function () {\n  return [useTranslation];\n});\n\n_c = Machines;\nexport default Machines;\n\nvar _c;\n\n$RefreshReg$(_c, \"Machines\");","map":{"version":3,"sources":["D:/Bureau/Projets Perso/React APP/coman-app/src/pages/Machines.jsx"],"names":["useState","useEffect","useCallback","BsFillCheckSquareFill","BsFillStopwatchFill","useTranslation","axios","Loading","num","type","statut","tempsRestant","Machines","machinesData","setMachinesData","isLoading","data","t","loadRepeator","setLoadRepeator","washing_machine","dryer","number","typeText","status","time_remaining","returnObjects","loadData","get","then","reponse","machine_info_status","machine_list","setInterval","clearInterval","timeFormat","secondes","minutes","Math","floor","newSecondes","minutesString","newSecondesString","map","machine","trim","startsWith","color"],"mappings":"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","sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\r\nimport { BsFillCheckSquareFill, BsFillStopwatchFill } from \"react-icons/bs\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport axios from \"axios\";\r\n\r\nimport Loading from \"../utils/components/Loading\";\r\n\r\nconst num = \"selecteur_machine\";\r\nconst type = \"nom_type\";\r\nconst statut = \"status\";\r\nconst tempsRestant = \"time_before_off\";\r\n\r\nfunction Machines() {\r\n\tconst [machinesData, setMachinesData] = useState({\r\n\t\tisLoading: true,\r\n\t\tdata: {},\r\n\t});\r\n\r\n\tconst { t } = useTranslation();\r\n\r\n\tconst [loadRepeator, setLoadRepeator] = useState(null);\r\n\r\n\tconst {\r\n\t\twashing_machine,\r\n\t\tdryer,\r\n\t\tnumber,\r\n\t\ttype: typeText,\r\n\t\tstatus,\r\n\t\ttime_remaining,\r\n\t} = t(\"machines_page\", { returnObjects: true });\r\n\r\n\tlet loadData = useCallback(() => {\r\n\t\t// Load the fake API that loads the real one through Python Backend\r\n\t\t// to bypass CORS Cross-Origin errors\r\n\t\taxios.get(\"https://coman-machines-api.herokuapp.com\").then((reponse) => {\r\n\t\t\tsetMachinesData({\r\n\t\t\t\tisLoading: false,\r\n\t\t\t\tdata: reponse.data.machine_info_status.machine_list,\r\n\t\t\t});\r\n\t\t});\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!loadRepeator) {\r\n\t\t\tloadData();\r\n\t\t\tsetLoadRepeator(setInterval(loadData, 5000));\r\n\t\t}\r\n\t\treturn () => {\r\n\t\t\tclearInterval(loadRepeator);\r\n\t\t};\r\n\t}, [loadRepeator, loadData]);\r\n\r\n\tlet timeFormat = (secondes) => {\r\n\t\tconst minutes = Math.floor(secondes / 60);\r\n\t\tconst newSecondes = secondes - minutes * 60;\r\n\t\tconst minutesString = minutes < 10 ? `0${minutes}` : `${minutes}`;\r\n\t\tconst newSecondesString = newSecondes < 10 ? `0${newSecondes}` : `${newSecondes}`;\r\n\t\treturn minutesString + \":\" + newSecondesString;\r\n\t};\r\n\r\n\treturn <FadeProps>{machinesData.isLoading ? (\r\n\t\t<Loading />\r\n\t) : (\r\n\t\t<table className='pretty-table'>\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>{number}</td>\r\n\t\t\t\t\t<td>{typeText}</td>\r\n\t\t\t\t\t<td>{status}</td>\r\n\t\t\t\t\t<td>{time_remaining}</td>\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t<tbody>\r\n\t\t\t\t{machinesData.data.map((machine) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<tr key={machine[num]}>\r\n\t\t\t\t\t\t\t<td>{machine[num]}</td>\r\n\t\t\t\t\t\t\t<td>{machine[type].trim().startsWith(\"L\") ? washing_machine : dryer}</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t{machine[statut] === 1 ? (\r\n\t\t\t\t\t\t\t\t\t<BsFillCheckSquareFill style={{ color: \"var(--lighter-green)\" }} />\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<BsFillStopwatchFill style={{ color: \"var(--orange)\" }} />\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td>{machine[statut] === 1 ? \"-\" : timeFormat(machine[tempsRestant])}</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</tbody>\r\n\t\t</table>\r\n\t)}</FadeProps>;\r\n}\r\n\r\nexport default Machines;\r\n"]},"metadata":{},"sourceType":"module"}