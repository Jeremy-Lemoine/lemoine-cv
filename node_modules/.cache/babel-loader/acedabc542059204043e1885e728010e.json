{"ast":null,"code":"var _jsxFileName = \"D:\\\\Bureau\\\\Projets Perso\\\\React APP\\\\coman-app\\\\src\\\\pages\\\\Admin.jsx\",\n    _s = $RefreshSig$();\n\nimport AdminUsersManager from \"./AdminUsersManager\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Admin() {\n  _s();\n\n  const {\n    isLoadingAuth,\n    isLoadedUser,\n    isAuthenticated,\n    userData\n  } = useUserData();\n\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: t('unauthentified_message_admin_page')\n    }, void 0, false);\n  }\n\n  if (isLoadedUser && !userData.admin) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: t('unauthorized_message_admin_page')\n    }, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(AdminUsersManager, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Admin, \"sPv+jhllGM7s3auwfDGeGnUTT/c=\", true);\n\n_c = Admin;\nexport default Admin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"sources":["D:/Bureau/Projets Perso/React APP/coman-app/src/pages/Admin.jsx"],"names":["AdminUsersManager","Admin","isLoadingAuth","isLoadedUser","isAuthenticated","userData","useUserData","t","admin"],"mappings":";;;AAAA,OAAOA,iBAAP,MAA8B,qBAA9B;;;;AAGA,SAASC,KAAT,GAAiB;AAAA;;AAEb,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,YAAjB;AAA+BC,IAAAA,eAA/B;AAAgDC,IAAAA;AAAhD,MAA6DC,WAAW,EAA9E;;AAEA,MAAI,CAACF,eAAL,EAAsB;AAClB,wBAAO;AAAA,gBAAGG,CAAC,CAAC,mCAAD;AAAJ,qBAAP;AACH;;AAED,MAAIJ,YAAY,IAAI,CAACE,QAAQ,CAACG,KAA9B,EAAqC;AACjC,wBAAO;AAAA,gBAAGD,CAAC,CAAC,iCAAD;AAAJ,qBAAP;AACH;;AAED,sBAAO,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;GAbQN,K;;KAAAA,K;AAeT,eAAeA,KAAf","sourcesContent":["import AdminUsersManager from \"./AdminUsersManager\";\r\n\r\n\r\nfunction Admin() {\r\n\r\n    const { isLoadingAuth, isLoadedUser, isAuthenticated, userData } = useUserData();\r\n\r\n    if (!isAuthenticated) {\r\n        return <>{t('unauthentified_message_admin_page')}</>\r\n    }\r\n\r\n    if (isLoadedUser && !userData.admin) {\r\n        return <>{t('unauthorized_message_admin_page')}</>\r\n    }\r\n\r\n    return <AdminUsersManager />;\r\n}\r\n\r\nexport default Admin;"]},"metadata":{},"sourceType":"module"}