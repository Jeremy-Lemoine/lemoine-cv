{"ast":null,"code":"var _jsxFileName = \"D:\\\\Bureau\\\\Test React\\\\coman-app\\\\src\\\\pages\\\\Other.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport database from \"../utils/database\";\nimport Loading from \"../utils/Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Other() {\n  _s();\n\n  const [objects, setObjects] = useState({\n    objects: {},\n    isLoaded: false\n  });\n  useEffect(() => {\n    async function perform() {\n      database.searchItems('qqch', {\n        LOL: 'haha'\n      }).then(array => {\n        setObjects({\n          objects: array,\n          isLoaded: true\n        });\n      }).catch(_ => {\n        setObjects({\n          objects: [[1, {\n            LOL: 'La base de données est vide.'\n          }], [1, {\n            LOL: 'La base de données est vide.'\n          }], [1, {\n            LOL: 'La base de données est vide.'\n          }], [1, {\n            LOL: 'La base de données est vide.'\n          }], [1, {\n            LOL: 'La base de données est vide.'\n          }], [1, {\n            LOL: 'La base de données est vide.'\n          }], [1, {\n            LOL: 'La base de données est vide.'\n          }], [1, {\n            LOL: 'La base de données est vide.'\n          }], [1, {\n            LOL: 'La base de données est vide.'\n          }], [1, {\n            LOL: 'La base de données est vide.'\n          }], [1, {\n            LOL: 'La base de données est vide.'\n          }], [1, {\n            LOL: 'La base de données est vide.'\n          }], [1, {\n            LOL: 'La base de données est vide.'\n          }], [1, {\n            LOL: 'La base de données est vide.'\n          }], [1, {\n            LOL: 'La base de données est vide.'\n          }], [1, {\n            LOL: 'La base de données est vide.'\n          }], [1, {\n            LOL: 'La base de données est vide.'\n          }], [1, {\n            LOL: 'La base de données est vide.'\n          }], [1, {\n            LOL: 'La base de données est vide.'\n          }], [1, {\n            LOL: 'La base de données est vide.'\n          }], [1, {\n            LOL: 'La base de données est vide.'\n          }], [1, {\n            LOL: 'La base de données est vide.'\n          }], [1, {\n            LOL: 'La base de données est vide.'\n          }], [1, {\n            LOL: 'La base de données est vide.'\n          }], [1, {\n            LOL: 'La base de données est vide.'\n          }], [1, {\n            LOL: 'La base de données est vide.'\n          }], [1, {\n            LOL: 'La base de données est vide.'\n          }], [1, {\n            LOL: 'La base de données est vide.'\n          }], [1, {\n            LOL: 'La base de données est vide.'\n          }], [1, {\n            LOL: 'La base de données est vide.'\n          }], [1, {\n            LOL: 'La base de données est vide.'\n          }], [1, {\n            LOL: 'La base de données est vide.'\n          }], [1, {\n            LOL: 'La base de données est vide.'\n          }], [1, {\n            LOL: 'La base de données est vide.'\n          }], [1, {\n            LOL: 'La base de données est vide.'\n          }]],\n          isLoaded: true\n        });\n      });\n    }\n\n    perform();\n  }, []);\n  return objects.isLoaded ? /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: objects.objects.map(_ref => {\n      let [id, item] = _ref;\n      console.log(id, item);\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item.LOL\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 31\n  }, this) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 16\n  }, this);\n}\n\n_s(Other, \"jkGUQ8jJqOARJluZ8rTBJeNcq2Y=\");\n\n_c = Other;\nexport default Other;\n\nvar _c;\n\n$RefreshReg$(_c, \"Other\");","map":{"version":3,"sources":["D:/Bureau/Test React/coman-app/src/pages/Other.jsx"],"names":["useState","useEffect","database","Loading","Other","objects","setObjects","isLoaded","perform","searchItems","LOL","then","array","catch","_","map","id","item","console","log"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport database from \"../utils/database\";\r\nimport Loading from \"../utils/Loading\";\r\n\r\nfunction Other() {\r\n\r\n    const [ objects, setObjects ] = useState({\r\n        objects: {},\r\n        isLoaded: false\r\n    })\r\n\r\n    useEffect(() => {\r\n        async function perform() {\r\n            database.searchItems('qqch', {LOL: 'haha'}).then( array => {\r\n            setObjects( {objects: array, isLoaded: true} )}).catch( _ => {\r\n                setObjects( {objects: [[1, {LOL: 'La base de données est vide.'}],[1, {LOL: 'La base de données est vide.'}],[1, {LOL: 'La base de données est vide.'}],[1, {LOL: 'La base de données est vide.'}],[1, {LOL: 'La base de données est vide.'}],[1, {LOL: 'La base de données est vide.'}],[1, {LOL: 'La base de données est vide.'}],[1, {LOL: 'La base de données est vide.'}],[1, {LOL: 'La base de données est vide.'}],[1, {LOL: 'La base de données est vide.'}],[1, {LOL: 'La base de données est vide.'}],[1, {LOL: 'La base de données est vide.'}],[1, {LOL: 'La base de données est vide.'}],[1, {LOL: 'La base de données est vide.'}],[1, {LOL: 'La base de données est vide.'}],[1, {LOL: 'La base de données est vide.'}],[1, {LOL: 'La base de données est vide.'}],[1, {LOL: 'La base de données est vide.'}],[1, {LOL: 'La base de données est vide.'}],[1, {LOL: 'La base de données est vide.'}],[1, {LOL: 'La base de données est vide.'}],[1, {LOL: 'La base de données est vide.'}],[1, {LOL: 'La base de données est vide.'}],[1, {LOL: 'La base de données est vide.'}],[1, {LOL: 'La base de données est vide.'}],[1, {LOL: 'La base de données est vide.'}],[1, {LOL: 'La base de données est vide.'}],[1, {LOL: 'La base de données est vide.'}],[1, {LOL: 'La base de données est vide.'}],[1, {LOL: 'La base de données est vide.'}],[1, {LOL: 'La base de données est vide.'}],[1, {LOL: 'La base de données est vide.'}],[1, {LOL: 'La base de données est vide.'}],[1, {LOL: 'La base de données est vide.'}],[1, {LOL: 'La base de données est vide.'}],], isLoaded: true} )\r\n            })\r\n        }\r\n        perform();\r\n    }, []);\r\n\r\n    return objects.isLoaded ? <ul>{objects.objects.map(([ id, item ]) => {\r\n        console.log(id, item)\r\n        return <li key={id}>{item.LOL}</li>\r\n    })}</ul> : <Loading />\r\n\r\n}\r\n\r\nexport default Other;"]},"metadata":{},"sourceType":"module"}