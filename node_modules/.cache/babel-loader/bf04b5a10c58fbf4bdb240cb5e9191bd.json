{"ast":null,"code":"var _jsxFileName = \"D:\\\\Bureau\\\\Projets Perso\\\\React APP\\\\coman-app\\\\src\\\\utils\\\\components\\\\checkbox.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CheckBox(_ref) {\n  _s();\n\n  let {\n    size = '50px',\n    onChange,\n    initial = false\n  } = _ref;\n  const [isChecked, SetIsChecked] = useState(initial);\n  const handleChange = onChange ? onChange : newValue => {};\n  return /*#__PURE__*/_jsxDEV(motion.svg, {\n    width: width,\n    height: \"50px\",\n    children: [/*#__PURE__*/_jsxDEV(motion.circle, {\n      cx: \"25\",\n      cy: \"25\",\n      r: \"22\",\n      className: `test${isHovered ? ' hover' : ''}`,\n      initial: {\n        pathLength: 0,\n        opacity: 0\n      },\n      animate: {\n        pathLength: 1,\n        opacity: 1\n      },\n      transition: {\n        duration: 1\n      },\n      onMouseEnter: () => setIsHovered(true),\n      onMouseLeave: () => setIsHovered(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(motion.polyline, {\n      onMouseEnter: () => setIsHovered(true),\n      onMouseLeave: () => setIsHovered(false),\n      points: \"15 24 23 32 36 19\",\n      fill: \"none\",\n      initial: {\n        pathLength: 0,\n        opacity: 0\n      },\n      animate: isHovered ? {\n        pathLength: 1,\n        opacity: 1\n      } : {\n        pathLength: 0,\n        opacity: 0\n      },\n      transition: {\n        duration: 0.5,\n        delay: isHovered ? 0.2 : 0\n      },\n      stroke: \"var(--orange)\",\n      strokeWidth: \"5px\",\n      strokeLinecap: \"round\",\n      cursor: \"pointer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CheckBox, \"mghhYQrBFq5Nd+tBdalbYVBvYhU=\");\n\n_c = CheckBox;\nexport default CheckBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckBox\");","map":{"version":3,"sources":["D:/Bureau/Projets Perso/React APP/coman-app/src/utils/components/checkbox.jsx"],"names":["useState","CheckBox","size","onChange","initial","isChecked","SetIsChecked","handleChange","newValue","width","isHovered","pathLength","opacity","duration","setIsHovered","delay"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAGA,SAASC,QAAT,OAA8D;AAAA;;AAAA,MAA5C;AAACC,IAAAA,IAAI,GAAG,MAAR;AAAgBC,IAAAA,QAAhB;AAA0BC,IAAAA,OAAO,GAAG;AAApC,GAA4C;AAE1D,QAAM,CAAEC,SAAF,EAAaC,YAAb,IAA8BN,QAAQ,CAACI,OAAD,CAA5C;AACA,QAAMG,YAAY,GAAGJ,QAAQ,GAAGA,QAAH,GAAeK,QAAD,IAAc,CAAE,CAA3D;AAEA,sBACI,QAAC,MAAD,CAAQ,GAAR;AACI,IAAA,KAAK,EAAEC,KADX;AAEI,IAAA,MAAM,EAAC,MAFX;AAAA,4BAII,QAAC,MAAD,CAAQ,MAAR;AACI,MAAA,EAAE,EAAC,IADP;AAEI,MAAA,EAAE,EAAC,IAFP;AAGI,MAAA,CAAC,EAAC,IAHN;AAII,MAAA,SAAS,EAAG,OAAMC,SAAS,GAAG,QAAH,GAAc,EAAG,EAJhD;AAKI,MAAA,OAAO,EAAE;AAACC,QAAAA,UAAU,EAAE,CAAb;AAAgBC,QAAAA,OAAO,EAAE;AAAzB,OALb;AAMI,MAAA,OAAO,EAAE;AAACD,QAAAA,UAAU,EAAE,CAAb;AAAgBC,QAAAA,OAAO,EAAE;AAAzB,OANb;AAOI,MAAA,UAAU,EAAE;AAACC,QAAAA,QAAQ,EAAE;AAAX,OAPhB;AAQI,MAAA,YAAY,EAAE,MAAMC,YAAY,CAAC,IAAD,CARpC;AASI,MAAA,YAAY,EAAE,MAAMA,YAAY,CAAC,KAAD;AATpC;AAAA;AAAA;AAAA;AAAA,YAJJ,eAeI,QAAC,MAAD,CAAQ,QAAR;AACI,MAAA,YAAY,EAAE,MAAMA,YAAY,CAAC,IAAD,CADpC;AAEI,MAAA,YAAY,EAAE,MAAMA,YAAY,CAAC,KAAD,CAFpC;AAGI,MAAA,MAAM,EAAC,mBAHX;AAII,MAAA,IAAI,EAAC,MAJT;AAKI,MAAA,OAAO,EAAE;AAACH,QAAAA,UAAU,EAAE,CAAb;AAAgBC,QAAAA,OAAO,EAAE;AAAzB,OALb;AAMI,MAAA,OAAO,EAAEF,SAAS,GAAG;AAACC,QAAAA,UAAU,EAAE,CAAb;AAAgBC,QAAAA,OAAO,EAAE;AAAzB,OAAH,GAAiC;AAACD,QAAAA,UAAU,EAAE,CAAb;AAAgBC,QAAAA,OAAO,EAAE;AAAzB,OANvD;AAOI,MAAA,UAAU,EAAE;AAACC,QAAAA,QAAQ,EAAE,GAAX;AAAgBE,QAAAA,KAAK,EAAEL,SAAS,GAAG,GAAH,GAAS;AAAzC,OAPhB;AAQI,MAAA,MAAM,EAAC,eARX;AASI,MAAA,WAAW,EAAC,KAThB;AAUI,MAAA,aAAa,EAAC,OAVlB;AAWI,MAAA,MAAM,EAAC;AAXX;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH;;GApCQT,Q;;KAAAA,Q;AAsCT,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\";\r\n\r\n\r\nfunction CheckBox({size = '50px', onChange, initial = false}) {\r\n\r\n    const [ isChecked, SetIsChecked ] = useState(initial);\r\n    const handleChange = onChange ? onChange : (newValue) => {};\r\n\r\n    return (\r\n        <motion.svg\r\n            width={width}\r\n            height='50px'\r\n        >\r\n            <motion.circle\r\n                cx=\"25\"\r\n                cy=\"25\"\r\n                r=\"22\"\r\n                className={`test${isHovered ? ' hover' : ''}`}\r\n                initial={{pathLength: 0, opacity: 0}}\r\n                animate={{pathLength: 1, opacity: 1}}\r\n                transition={{duration: 1}}\r\n                onMouseEnter={() => setIsHovered(true)}\r\n                onMouseLeave={() => setIsHovered(false)}\r\n            />\r\n            <motion.polyline\r\n                onMouseEnter={() => setIsHovered(true)}\r\n                onMouseLeave={() => setIsHovered(false)}\r\n                points=\"15 24 23 32 36 19\"\r\n                fill=\"none\"\r\n                initial={{pathLength: 0, opacity: 0}}\r\n                animate={isHovered ? {pathLength: 1, opacity: 1} : {pathLength: 0, opacity: 0}}\r\n                transition={{duration: 0.5, delay: isHovered ? 0.2 : 0}}\r\n                stroke=\"var(--orange)\"\r\n                strokeWidth=\"5px\"\r\n                strokeLinecap=\"round\"\r\n                cursor=\"pointer\"\r\n            />\r\n        </motion.svg>\r\n    )\r\n}\r\n\r\nexport default CheckBox;"]},"metadata":{},"sourceType":"module"}