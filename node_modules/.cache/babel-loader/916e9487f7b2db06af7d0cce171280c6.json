{"ast":null,"code":"var _jsxFileName = \"D:\\\\Bureau\\\\Projets Perso\\\\React APP\\\\coman-app\\\\src\\\\utils\\\\components\\\\Checkbox.jsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sizeRatioBetweenCheckedAndNot = 12;\n\nfunction CheckBox(_ref) {\n  _s();\n\n  let {\n    sizeInPx = 50,\n    onChange,\n    initial = false,\n    strokeWidthInPx = 3\n  } = _ref;\n  const [isChecked, setIsChecked] = useState(initial);\n\n  const handleChange = onChange || (_ => {});\n\n  const [isAlreadyLoaded, setIsAlreadyLoaded] = useState(false);\n  useEffect(() => {\n    setTimeout(() => setIsAlreadyLoaded(true), 500);\n  }, []);\n  const getCheckmarkPoints = useCallback(() => {\n    const center = sizeInPx / 2.05;\n    const x1 = center - sizeInPx / 5;\n    const y1 = center - sizeInPx / 50;\n    const x2 = center - sizeInPx / 25;\n    const y2 = center + sizeInPx / 7.2;\n    const x3 = center + sizeInPx / 4.5;\n    const y3 = center - sizeInPx / 8.3;\n    return [x1, y1, x2, y2, x3, y3].join(\" \");\n  }, [sizeInPx]);\n  const getForm = useCallback(() => {\n    return {\n      rx: isChecked ? sizeInPx / 2 : sizeInPx / 15,\n      x: isChecked ? strokeWidthInPx + 1 + sizeInPx / sizeRatioBetweenCheckedAndNot : strokeWidthInPx + 1,\n      y: isChecked ? strokeWidthInPx + 1 + sizeInPx / sizeRatioBetweenCheckedAndNot : strokeWidthInPx + 1,\n      width: isChecked ? sizeInPx - 2 * (strokeWidthInPx + 1 + sizeInPx / sizeRatioBetweenCheckedAndNot) : sizeInPx - 2 * strokeWidthInPx - 2,\n      height: isChecked ? sizeInPx - 2 * (strokeWidthInPx + 1 + sizeInPx / sizeRatioBetweenCheckedAndNot) : sizeInPx - 2 * strokeWidthInPx - 2\n    };\n  }, [sizeInPx, isChecked, strokeWidthInPx]);\n  return /*#__PURE__*/_jsxDEV(motion.svg, {\n    width: sizeInPx,\n    height: sizeInPx,\n    children: [/*#__PURE__*/_jsxDEV(motion.rect, {\n      // becomes a circle when clicked on (rx in getForm() is the radius of the circle)\n      className: `checkbox${isChecked ? \" checked\" : \"\"}`,\n      initial: {\n        pathLength: 0,\n        opacity: 0,\n        ...getForm()\n      },\n      animate: isAlreadyLoaded ? {\n        pathLength: 1,\n        opacity: 1,\n        ...getForm()\n      } : {\n        pathLength: 0,\n        opacity: 0,\n        ...getForm()\n      },\n      transition: {\n        duration: 1,\n        delay: isChecked ? 1 : 0\n      },\n      onClick: () => {\n        setIsChecked(isChecked => !isChecked);\n        handleChange(!isChecked);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(motion.polyline, {\n      points: getCheckmarkPoints(),\n      fill: \"none\",\n      initial: {\n        pathLength: 0,\n        opacity: 0\n      },\n      animate: isAlreadyLoaded ? isChecked ? {\n        pathLength: 1,\n        opacity: 1\n      } : {\n        pathLength: 0,\n        opacity: 0\n      } : {\n        pathLength: 0,\n        opacity: 0\n      },\n      transition: {\n        duration: 1,\n        delay: isChecked ? 0 : 1\n      },\n      stroke: \"var(--orange)\",\n      strokeWidth: `${strokeWidthInPx}px`,\n      strokeLinecap: \"round\",\n      cursor: \"pointer\",\n      onClick: () => {\n        setIsChecked(isChecked => !isChecked);\n        handleChange(!isChecked);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 3\n  }, this);\n}\n\n_s(CheckBox, \"kkFW8PX522swtFZiM5VfKLqkAcU=\");\n\n_c = CheckBox;\nexport default CheckBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckBox\");","map":{"version":3,"sources":["D:/Bureau/Projets Perso/React APP/coman-app/src/utils/components/Checkbox.jsx"],"names":["useCallback","useEffect","useState","motion","sizeRatioBetweenCheckedAndNot","CheckBox","sizeInPx","onChange","initial","strokeWidthInPx","isChecked","setIsChecked","handleChange","_","isAlreadyLoaded","setIsAlreadyLoaded","setTimeout","getCheckmarkPoints","center","x1","y1","x2","y2","x3","y3","join","getForm","rx","x","y","width","height","pathLength","opacity","duration","delay"],"mappings":"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","sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst sizeRatioBetweenCheckedAndNot = 12;\r\n\r\nfunction CheckBox({ sizeInPx = 50, onChange, initial = false, strokeWidthInPx = 3 }) {\r\n\tconst [isChecked, setIsChecked] = useState(initial);\r\n\tconst handleChange = onChange || ((_) => {});\r\n\r\n\tconst [isAlreadyLoaded, setIsAlreadyLoaded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => setIsAlreadyLoaded(true), 500)\r\n    }, [])\r\n\r\n\tconst getCheckmarkPoints = useCallback(() => {\r\n\t\tconst center = sizeInPx / 2.05;\r\n\t\tconst x1 = center - sizeInPx / 5;\r\n\t\tconst y1 = center - sizeInPx / 50;\r\n\t\tconst x2 = center - sizeInPx / 25;\r\n\t\tconst y2 = center + sizeInPx / 7.2;\r\n\t\tconst x3 = center + sizeInPx / 4.5;\r\n\t\tconst y3 = center - sizeInPx / 8.3;\r\n\t\treturn [x1, y1, x2, y2, x3, y3].join(\" \");\r\n\t}, [sizeInPx]);\r\n\r\n\tconst getForm = useCallback(() => {\r\n\t\treturn {\r\n\t\t\trx: isChecked ? sizeInPx / 2 : sizeInPx / 15,\r\n\t\t\tx: isChecked ? strokeWidthInPx + 1 + sizeInPx / sizeRatioBetweenCheckedAndNot : strokeWidthInPx + 1,\r\n\t\t\ty: isChecked ? strokeWidthInPx + 1 + sizeInPx / sizeRatioBetweenCheckedAndNot : strokeWidthInPx + 1,\r\n\t\t\twidth: isChecked\r\n\t\t\t\t? sizeInPx - 2 * (strokeWidthInPx + 1 + sizeInPx / sizeRatioBetweenCheckedAndNot)\r\n\t\t\t\t: sizeInPx - 2 * strokeWidthInPx - 2,\r\n\t\t\theight: isChecked\r\n\t\t\t\t? sizeInPx - 2 * (strokeWidthInPx + 1 + sizeInPx / sizeRatioBetweenCheckedAndNot)\r\n\t\t\t\t: sizeInPx - 2 * strokeWidthInPx - 2,\r\n\t\t};\r\n\t}, [sizeInPx, isChecked, strokeWidthInPx]);\r\n\r\n\treturn (\r\n\t\t<motion.svg width={sizeInPx} height={sizeInPx}>\r\n\t\t\t<motion.rect // becomes a circle when clicked on (rx in getForm() is the radius of the circle)\r\n\t\t\t\tclassName={`checkbox${isChecked ? \" checked\" : \"\"}`}\r\n\t\t\t\tinitial={{ pathLength: 0, opacity: 0, ...getForm() }}\r\n\t\t\t\tanimate={\r\n\t\t\t\t\tisAlreadyLoaded\r\n\t\t\t\t\t\t? { pathLength: 1, opacity: 1, ...getForm() }\r\n\t\t\t\t\t\t: { pathLength: 0, opacity: 0, ...getForm() }\r\n\t\t\t\t}\r\n\t\t\t\ttransition={{ duration: 1, delay: isChecked ? 1 : 0 }}\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tsetIsChecked((isChecked) => !isChecked);\r\n\t\t\t\t\thandleChange(!isChecked);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<motion.polyline\r\n\t\t\t\tpoints={getCheckmarkPoints()}\r\n\t\t\t\tfill='none'\r\n\t\t\t\tinitial={{ pathLength: 0, opacity: 0 }}\r\n\t\t\t\tanimate={\r\n\t\t\t\t\tisAlreadyLoaded\r\n\t\t\t\t\t\t? isChecked\r\n\t\t\t\t\t\t\t? { pathLength: 1, opacity: 1 }\r\n\t\t\t\t\t\t\t: { pathLength: 0, opacity: 0 }\r\n\t\t\t\t\t\t: { pathLength: 0, opacity: 0 }\r\n\t\t\t\t}\r\n\t\t\t\ttransition={{ duration: 1, delay: isChecked ? 0 : 1 }}\r\n\t\t\t\tstroke='var(--orange)'\r\n\t\t\t\tstrokeWidth={`${strokeWidthInPx}px`}\r\n\t\t\t\tstrokeLinecap='round'\r\n\t\t\t\tcursor='pointer'\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tsetIsChecked((isChecked) => !isChecked);\r\n\t\t\t\t\thandleChange(!isChecked);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</motion.svg>\r\n\t);\r\n}\r\n\r\nexport default CheckBox;\r\n"]},"metadata":{},"sourceType":"module"}