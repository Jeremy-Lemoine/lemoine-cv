{"ast":null,"code":"var _jsxFileName = \"D:\\\\Bureau\\\\React APP\\\\coman-app\\\\src\\\\pages\\\\Admin.jsx\",\n    _s = $RefreshSig$();\n\nimport Loading from \"../utils/Loading\";\nimport useUserData from \"../utils/useUserData\";\nimport { useTranslation } from \"react-i18next\";\nimport database from '../utils/database';\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Admin() {\n  _s();\n\n  const {\n    isLoadingAuth,\n    isLoadedUser,\n    isAuthenticated,\n    userData\n  } = useUserData();\n  const {\n    t\n  } = useTranslation();\n  const [allUsersData, setAllUsersData] = useState([]);\n  useEffect(() => {\n    async function loadData() {\n      database.readDirectory('/users').then(obj => setAllUsersData(Object.entries(obj)));\n    }\n\n    ;\n    loadData();\n  }, []);\n\n  if (isLoadingAuth) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: t('unauthentified_message_admin_page')\n    }, void 0, false);\n  }\n\n  if (isLoadedUser && !userData.admin) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: t('unauthorized_message_admin_page')\n    }, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"TODO Translate AdminPage\", /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"pretty-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Pdp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Pseudo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: allUsersData && allUsersData.map(_ref => {\n          let [id, {\n            userName,\n            userPicture,\n            admin\n          }] = _ref;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: userPicture,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: userName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: admin ? \"Oui\" : \"Non\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 33\n            }, this)]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Admin, \"UB97XXS+pEf/m3x/WyE7oYpGmvY=\", false, function () {\n  return [useUserData, useTranslation];\n});\n\n_c = Admin;\nexport default Admin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"sources":["D:/Bureau/React APP/coman-app/src/pages/Admin.jsx"],"names":["Loading","useUserData","useTranslation","database","useState","useEffect","Admin","isLoadingAuth","isLoadedUser","isAuthenticated","userData","t","allUsersData","setAllUsersData","loadData","readDirectory","then","obj","Object","entries","admin","map","id","userName","userPicture"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,kBAApB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AAEb,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,YAAjB;AAA+BC,IAAAA,eAA/B;AAAgDC,IAAAA;AAAhD,MAA6DT,WAAW,EAA9E;AAEA,QAAM;AAAEU,IAAAA;AAAF,MAAQT,cAAc,EAA5B;AAEA,QAAM,CAAEU,YAAF,EAAgBC,eAAhB,IAAoCT,QAAQ,CAAC,EAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeS,QAAf,GAA2B;AACvBX,MAAAA,QAAQ,CAACY,aAAT,CAAuB,QAAvB,EAAiCC,IAAjC,CAAsCC,GAAG,IACrCJ,eAAe,CAACK,MAAM,CAACC,OAAP,CAAeF,GAAf,CAAD,CADnB;AAEH;;AAAA;AACDH,IAAAA,QAAQ;AACX,GANQ,EAMN,EANM,CAAT;;AAQA,MAAIP,aAAJ,EAAmB;AACf,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,MAAI,CAACE,eAAL,EAAsB;AAClB,wBAAO;AAAA,gBAAGE,CAAC,CAAC,mCAAD;AAAJ,qBAAP;AACH;;AAED,MAAIH,YAAY,IAAI,CAACE,QAAQ,CAACU,KAA9B,EAAqC;AACjC,wBAAO;AAAA,gBAAGT,CAAC,CAAC,iCAAD;AAAJ,qBAAP;AACH;;AAED,sBACI;AAAA,wDAGA;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAA,8BACI;AAAA,+BACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAA,kBACMC,YAAY,IACVA,YAAY,CAACS,GAAb,CAAiB,QAA0C;AAAA,cAAzC,CAACC,EAAD,EAAK;AAACC,YAAAA,QAAD;AAAWC,YAAAA,WAAX;AAAwBJ,YAAAA;AAAxB,WAAL,CAAyC;AACvD,8BACI;AAAA,oCACI;AAAA,qCAAI;AAAK,gBAAA,GAAG,EAAEI,WAAV;AAAuB,gBAAA,GAAG,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,wBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA,wBAAKH,KAAK,GAAG,KAAH,GAAW;AAArB;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA,aAASE,EAAT;AAAA;AAAA;AAAA;AAAA,kBADJ;AAOH,SARD;AAFR;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA,kBADJ;AA4BH;;GAxDQhB,K;UAE8DL,W,EAErDC,c;;;KAJTI,K;AA0DT,eAAeA,KAAf","sourcesContent":["import Loading from \"../utils/Loading\"\r\nimport useUserData from \"../utils/useUserData\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport database from '../utils/database'\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction Admin() {\r\n\r\n    const { isLoadingAuth, isLoadedUser, isAuthenticated, userData } = useUserData();\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const [ allUsersData, setAllUsersData ] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function loadData () {\r\n            database.readDirectory('/users').then(obj => \r\n                setAllUsersData(Object.entries(obj)));\r\n        };\r\n        loadData();\r\n    }, []);\r\n\r\n    if (isLoadingAuth) {\r\n        return <Loading />\r\n    }\r\n\r\n    if (!isAuthenticated) {\r\n        return <>{t('unauthentified_message_admin_page')}</>\r\n    }\r\n\r\n    if (isLoadedUser && !userData.admin) {\r\n        return <>{t('unauthorized_message_admin_page')}</>\r\n    }\r\n\r\n    return (\r\n        <>\r\n        TODO Translate AdminPage\r\n        {/* Possibility to manage admin users ? */}\r\n        <table className=\"pretty-table\">\r\n            <thead>\r\n                <tr>\r\n                    <td>Pdp</td>\r\n                    <td>Pseudo</td>\r\n                    <td>Admin</td>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {(allUsersData && (\r\n                    allUsersData.map(([id, {userName, userPicture, admin}]) => {\r\n                        return (\r\n                            <tr key={id}>\r\n                                <td><img src={userPicture} alt=\"\"/></td>\r\n                                <td>{userName}</td>\r\n                                <td>{admin ? \"Oui\" : \"Non\"}</td>\r\n                            </tr>\r\n                        )\r\n                    })\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Admin;"]},"metadata":{},"sourceType":"module"}