{"ast":null,"code":"var _jsxFileName = \"D:\\\\Bureau\\\\Test React\\\\coman-app\\\\src\\\\pages\\\\Machines.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Loading from \"../utils/Loading\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst num = \"selecteur_machine\";\nconst type = \"nom_type\";\nconst statut = \"status\";\n\nfunction Machines() {\n  _s();\n\n  const [machinesData, setMachinesData] = useState({\n    isLoading: true,\n    data: {}\n  });\n  useEffect(() => {\n    axios.get('https://coman-machines-api.herokuapp.com').then(reponse => {\n      setMachinesData({\n        isLoading: false,\n        data: reponse.data.machine_info_status.machine_list\n      });\n    });\n  }, []);\n  return machinesData.isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 37\n  }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Num\\xE9ro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Statut\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: machinesData.data.map(machine => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: machine[num]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: machine[type].trim()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: machine[statut]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this)]\n        }, machine[num], true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Machines, \"gWWBzzMHtDbp6cG+dtKu2K0HfWs=\");\n\n_c = Machines;\nexport default Machines;\n\nvar _c;\n\n$RefreshReg$(_c, \"Machines\");","map":{"version":3,"sources":["D:/Bureau/Test React/coman-app/src/pages/Machines.jsx"],"names":["useState","useEffect","Loading","axios","num","type","statut","Machines","machinesData","setMachinesData","isLoading","data","get","then","reponse","machine_info_status","machine_list","map","machine","trim"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAG,GAAG,mBAAZ;AACA,MAAMC,IAAI,GAAG,UAAb;AACA,MAAMC,MAAM,GAAG,QAAf;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAEhB,QAAM,CAAEC,YAAF,EAAgBC,eAAhB,IAAoCT,QAAQ,CAAC;AAC/CU,IAAAA,SAAS,EAAE,IADoC;AAE/CC,IAAAA,IAAI,EAAE;AAFyC,GAAD,CAAlD;AAKAV,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,CAACS,GAAN,CAAU,0CAAV,EACCC,IADD,CACMC,OAAO,IAAI;AACbL,MAAAA,eAAe,CAAC;AACZC,QAAAA,SAAS,EAAE,KADC;AAEZC,QAAAA,IAAI,EAAEG,OAAO,CAACH,IAAR,CAAaI,mBAAb,CAAiCC;AAF3B,OAAD,CAAf;AAIH,KAND;AAOH,GARQ,EAQN,EARM,CAAT;AAUA,SAAOR,YAAY,CAACE,SAAb,gBAAyB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAzB,gBACH;AAAA,4BACI;AAAA,6BACI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI;AAAA,gBACKF,YAAY,CAACG,IAAb,CAAkBM,GAAlB,CAAsBC,OAAO,IAAI;AAC9B,4BACI;AAAA,kCACI;AAAA,sBAAKA,OAAO,CAACd,GAAD;AAAZ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAKc,OAAO,CAACb,IAAD,CAAP,CAAcc,IAAd;AAAL;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,sBAAKD,OAAO,CAACZ,MAAD;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA,WAASY,OAAO,CAACd,GAAD,CAAhB;AAAA;AAAA;AAAA;AAAA,gBADJ;AAOH,OARA;AADL;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH;;GAvCQG,Q;;KAAAA,Q;AAyCT,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from \"react\"\r\nimport Loading from \"../utils/Loading\"\r\nimport axios from \"axios\"\r\n\r\nconst num = \"selecteur_machine\";\r\nconst type = \"nom_type\";\r\nconst statut = \"status\";\r\n\r\nfunction Machines() {\r\n\r\n    const [ machinesData, setMachinesData ] = useState({\r\n        isLoading: true,\r\n        data: {}\r\n    })\r\n\r\n    useEffect(() => {\r\n        axios.get('https://coman-machines-api.herokuapp.com')\r\n        .then(reponse => {\r\n            setMachinesData({\r\n                isLoading: false,\r\n                data: reponse.data.machine_info_status.machine_list\r\n            })\r\n        })\r\n    }, [])\r\n    \r\n    return machinesData.isLoading ? <Loading /> : (\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <td>Num√©ro</td>\r\n                    <td>Type</td>\r\n                    <td>Statut</td>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {machinesData.data.map(machine => {\r\n                    return (\r\n                        <tr key={machine[num]}>\r\n                            <td>{machine[num]}</td>\r\n                            <td>{machine[type].trim()}</td>\r\n                            <td>{machine[statut]}</td>\r\n                        </tr>\r\n                    )\r\n                })}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default Machines;"]},"metadata":{},"sourceType":"module"}