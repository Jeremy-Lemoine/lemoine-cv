{"ast":null,"code":"var _jsxFileName = \"D:\\\\Bureau\\\\Test React\\\\coman-app\\\\src\\\\pages\\\\settings\\\\Language.jsx\";\nimport { changeLanguage } from 'i18next';\nimport info from '../../languages/info';\nimport database from '../../utils/database';\nimport Selection from '../../utils/Selection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = info.map(lang => {\n  return {\n    value: lang.language,\n    label: lang.label\n  };\n});\n\nconst LanguageSelectorField = _ref => {\n  let {\n    userData,\n    userID\n  } = _ref;\n\n  const handleChange = _ref2 => {\n    let {\n      value\n    } = _ref2;\n    changeLanguage(value);\n    database.setUserData(userID, 'language', value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Selection, {\n    options: options,\n    defaultOption: options.find(lang => lang.value === userData.language),\n    handleChange: handleChange,\n    fontFamily: \"var(--coman-font)\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_c = LanguageSelectorField;\nexport default LanguageSelectorField;\n\nvar _c;\n\n$RefreshReg$(_c, \"LanguageSelectorField\");","map":{"version":3,"sources":["D:/Bureau/Test React/coman-app/src/pages/settings/Language.jsx"],"names":["changeLanguage","info","database","Selection","options","map","lang","value","language","label","LanguageSelectorField","userData","userID","handleChange","setUserData","find"],"mappings":";AAAA,SAASA,cAAT,QAA+B,SAA/B;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;AAEA,MAAMC,OAAO,GAAGH,IAAI,CAACI,GAAL,CAASC,IAAI,IAAI;AAC7B,SAAO;AAAEC,IAAAA,KAAK,EAAED,IAAI,CAACE,QAAd;AAAwBC,IAAAA,KAAK,EAAEH,IAAI,CAACG;AAApC,GAAP;AACH,CAFe,CAAhB;;AAIA,MAAMC,qBAAqB,GAAG,QAA0B;AAAA,MAAzB;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAyB;;AAEpD,QAAMC,YAAY,GAAG,SAAe;AAAA,QAAd;AAAEN,MAAAA;AAAF,KAAc;AAChCP,IAAAA,cAAc,CAACO,KAAD,CAAd;AACAL,IAAAA,QAAQ,CAACY,WAAT,CAAqBF,MAArB,EAA6B,UAA7B,EAAyCL,KAAzC;AACH,GAHD;;AAKA,sBACI,QAAC,SAAD;AACI,IAAA,OAAO,EAAEH,OADb;AAEI,IAAA,aAAa,EAAEA,OAAO,CAACW,IAAR,CAAaT,IAAI,IAAIA,IAAI,CAACC,KAAL,KAAeI,QAAQ,CAACH,QAA7C,CAFnB;AAGI,IAAA,YAAY,EAAEK,YAHlB;AAII,IAAA,UAAU,EAAC;AAJf;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAhBD;;KAAMH,qB;AAkBN,eAAeA,qBAAf","sourcesContent":["import { changeLanguage } from 'i18next';\r\nimport info from '../../languages/info';\r\nimport database from '../../utils/database';\r\nimport Selection from '../../utils/Selection'\r\n\r\nconst options = info.map(lang => {\r\n    return { value: lang.language, label: lang.label }\r\n});\r\n\r\nconst LanguageSelectorField = ({ userData, userID }) => {\r\n\r\n    const handleChange = ({ value }) => {\r\n        changeLanguage(value);\r\n        database.setUserData(userID, 'language', value);\r\n    }\r\n\r\n    return (\r\n        <Selection\r\n            options={options}\r\n            defaultOption={options.find(lang => lang.value === userData.language)}\r\n            handleChange={handleChange}\r\n            fontFamily='var(--coman-font)'\r\n        />\r\n    );\r\n\r\n};\r\n\r\nexport default LanguageSelectorField;"]},"metadata":{},"sourceType":"module"}