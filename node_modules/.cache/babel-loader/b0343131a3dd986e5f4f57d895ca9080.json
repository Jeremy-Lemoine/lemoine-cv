{"ast":null,"code":"var _jsxFileName = \"D:\\\\Bureau\\\\Test React\\\\coman-app\\\\src\\\\pages\\\\Machines.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Loading from \"../utils/Loading\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst num = \"selecteur_machine\";\nconst type = \"nom_type\";\nconst statut = \"status\";\nconst tempsRestant = \"time_before_off\";\n\nfunction Machines() {\n  _s();\n\n  const [machinesData, setMachinesData] = useState({\n    isLoading: true,\n    data: {}\n  });\n\n  let loadData = () => {\n    axios.get('https://coman-machines-api.herokuapp.com').then(reponse => {\n      setMachinesData({\n        isLoading: false,\n        data: reponse.data.machine_info_status.machine_list\n      });\n    });\n  };\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  let timeFormat = secondes => {\n    const minutes = Math.floor(secondes / 60);\n    const newSecondes = secondes - minutes * 60;\n    const minutesString = minutes < 10 ? `0${minutes}` : `${minutes}`;\n    const newSecondesString = newSecondes < 10 ? `0${newSecondes}` : `${newSecondes}`;\n    return minutesString + \":\" + newSecondesString;\n  };\n\n  return machinesData.isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 37\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Num\\xE9ro\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Statut\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Temps restant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: machinesData.data.map(machine => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: machine[num]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: machine[type].trim()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: machine[statut] === 1 ? \"Libre\" : \"Occupé\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: machine[statut] === 1 ? \"-\" : timeFormat(machine[tempsRestant])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this)]\n          }, machine[num], true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: loadData,\n      style: {\n        marginTop: '50px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Actualiser\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 64\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Machines, \"gWWBzzMHtDbp6cG+dtKu2K0HfWs=\");\n\n_c = Machines;\nexport default Machines;\n\nvar _c;\n\n$RefreshReg$(_c, \"Machines\");","map":{"version":3,"sources":["D:/Bureau/Test React/coman-app/src/pages/Machines.jsx"],"names":["useState","useEffect","Loading","axios","num","type","statut","tempsRestant","Machines","machinesData","setMachinesData","isLoading","data","loadData","get","then","reponse","machine_info_status","machine_list","timeFormat","secondes","minutes","Math","floor","newSecondes","minutesString","newSecondesString","map","machine","trim","marginTop"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,GAAG,GAAG,mBAAZ;AACA,MAAMC,IAAI,GAAG,UAAb;AACA,MAAMC,MAAM,GAAG,QAAf;AACA,MAAMC,YAAY,GAAG,iBAArB;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAEhB,QAAM,CAAEC,YAAF,EAAgBC,eAAhB,IAAoCV,QAAQ,CAAC;AAC/CW,IAAAA,SAAS,EAAE,IADoC;AAE/CC,IAAAA,IAAI,EAAE;AAFyC,GAAD,CAAlD;;AAKA,MAAIC,QAAQ,GAAG,MAAM;AACjBV,IAAAA,KAAK,CAACW,GAAN,CAAU,0CAAV,EACCC,IADD,CACMC,OAAO,IAAI;AACbN,MAAAA,eAAe,CAAC;AACZC,QAAAA,SAAS,EAAE,KADC;AAEZC,QAAAA,IAAI,EAAEI,OAAO,CAACJ,IAAR,CAAaK,mBAAb,CAAiCC;AAF3B,OAAD,CAAf;AAIH,KAND;AAOH,GARD;;AAUAjB,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,QAAQ;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAIM,UAAU,GAAIC,QAAD,IAAc;AAC3B,UAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,QAAQ,GAAG,EAAtB,CAAhB;AACA,UAAMI,WAAW,GAAGJ,QAAQ,GAAGC,OAAO,GAAG,EAAzC;AACA,UAAMI,aAAa,GAAGJ,OAAO,GAAG,EAAV,GAAgB,IAAGA,OAAQ,EAA3B,GAAgC,GAAEA,OAAQ,EAAhE;AACA,UAAMK,iBAAiB,GAAGF,WAAW,GAAG,EAAd,GAAoB,IAAGA,WAAY,EAAnC,GAAwC,GAAEA,WAAY,EAAhF;AACA,WAAOC,aAAa,GAAG,GAAhB,GAAsBC,iBAA7B;AACH,GAND;;AAQA,SAAOjB,YAAY,CAACE,SAAb,gBAAyB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAzB,gBACH;AAAA,4BACA;AAAO,MAAA,SAAS,EAAC,EAAjB;AAAA,8BACI;AAAA,+BACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eASI;AAAA,kBACKF,YAAY,CAACG,IAAb,CAAkBe,GAAlB,CAAsBC,OAAO,IAAI;AAC9B,8BACI;AAAA,oCACI;AAAA,wBAAKA,OAAO,CAACxB,GAAD;AAAZ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,wBAAKwB,OAAO,CAACvB,IAAD,CAAP,CAAcwB,IAAd;AAAL;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA,wBAAKD,OAAO,CAACtB,MAAD,CAAP,KAAoB,CAApB,GAAwB,OAAxB,GAAkC;AAAvC;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAA,wBAAKsB,OAAO,CAACtB,MAAD,CAAP,KAAoB,CAApB,GAAwB,GAAxB,GAA8Ba,UAAU,CAACS,OAAO,CAACrB,YAAD,CAAR;AAA7C;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA,aAASqB,OAAO,CAACxB,GAAD,CAAhB;AAAA;AAAA;AAAA;AAAA,kBADJ;AAQH,SATA;AADL;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAuBA;AAAQ,MAAA,OAAO,EAAES,QAAjB;AAA2B,MAAA,KAAK,EAAE;AAACiB,QAAAA,SAAS,EAAE;AAAZ,OAAlC;AAAA,6BAAuD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAvD;AAAA;AAAA;AAAA;AAAA,YAvBA;AAAA,kBADJ;AA2BH;;GAxDQtB,Q;;KAAAA,Q;AA0DT,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from \"react\"\r\nimport Loading from \"../utils/Loading\"\r\nimport axios from \"axios\"\r\n\r\nconst num = \"selecteur_machine\";\r\nconst type = \"nom_type\";\r\nconst statut = \"status\";\r\nconst tempsRestant = \"time_before_off\";\r\n\r\nfunction Machines() {\r\n\r\n    const [ machinesData, setMachinesData ] = useState({\r\n        isLoading: true,\r\n        data: {}\r\n    })\r\n\r\n    let loadData = () => {\r\n        axios.get('https://coman-machines-api.herokuapp.com')\r\n        .then(reponse => {\r\n            setMachinesData({\r\n                isLoading: false,\r\n                data: reponse.data.machine_info_status.machine_list\r\n            })\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n    }, [])\r\n    \r\n    let timeFormat = (secondes) => {\r\n        const minutes = Math.floor(secondes / 60);\r\n        const newSecondes = secondes - minutes * 60;\r\n        const minutesString = minutes < 10 ? `0${minutes}` : `${minutes}`;\r\n        const newSecondesString = newSecondes < 10 ? `0${newSecondes}` : `${newSecondes}`;\r\n        return minutesString + \":\" + newSecondesString;\r\n    }\r\n\r\n    return machinesData.isLoading ? <Loading /> : (\r\n        <>\r\n        <table className=\"\">\r\n            <thead>\r\n                <tr>\r\n                    <td>Numéro</td>\r\n                    <td>Type</td>\r\n                    <td>Statut</td>\r\n                    <td>Temps restant</td>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {machinesData.data.map(machine => {\r\n                    return (\r\n                        <tr key={machine[num]}>\r\n                            <td>{machine[num]}</td>\r\n                            <td>{machine[type].trim()}</td>\r\n                            <td>{machine[statut] === 1 ? \"Libre\" : \"Occupé\"}</td>\r\n                            <td>{machine[statut] === 1 ? \"-\" : timeFormat(machine[tempsRestant])}</td>\r\n                        </tr>\r\n                    )\r\n                })}\r\n            </tbody>\r\n        </table>\r\n        <button onClick={loadData} style={{marginTop: '50px'}}><span>Actualiser</span></button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Machines;"]},"metadata":{},"sourceType":"module"}