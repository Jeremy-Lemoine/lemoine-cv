{"ast":null,"code":"var _jsxFileName = \"D:\\\\Bureau\\\\Test React\\\\coman-app\\\\src\\\\pages\\\\Settings.jsx\",\n    _s = $RefreshSig$();\n\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { useState, useEffect, Fragment } from \"react\";\nimport database from \"../utils/database\";\nimport Loading from \"../utils/Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Settings() {\n  _s();\n\n  const {\n    user,\n    isLoading,\n    isAuthenticated\n  } = useAuth0();\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: \"Veuillez vous connecter pour modifier vos param\\xE8tres.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 16\n    }, this);\n  } // L'utilisateur est authentifié\n\n\n  const userID = user.sub;\n  const [userData, setUserData] = useState({\n    isLoaded: false,\n    data: {}\n  });\n  useEffect(() => {\n    async function loadUserData() {\n      database.searchItems(\"users\", {\n        userID: userID\n      }).then(userData => {\n        setUserData({\n          isLoaded: true,\n          data: userData\n        });\n      }).catch(_ => {\n        setUserData({\n          isLoaded: true,\n          data: {}\n        });\n      });\n    }\n\n    loadUserData();\n  });\n  return !userData.isLoaded ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 30\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: console.log(userData.data)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Settings, \"gfC7V+v4ysump9BDC166bjSwZWA=\", false, function () {\n  return [useAuth0];\n});\n\n_c = Settings;\nexport default Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["D:/Bureau/Test React/coman-app/src/pages/Settings.jsx"],"names":["useAuth0","useState","useEffect","Fragment","database","Loading","Settings","user","isLoading","isAuthenticated","userID","sub","userData","setUserData","isLoaded","data","loadUserData","searchItems","then","catch","_","textAlign","console","log"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,oBAAzB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,QAA9B,QAA8C,OAA9C;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,OAAP,MAAoB,kBAApB;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAEhB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,SAAR;AAAmBC,IAAAA;AAAnB,MAAuCT,QAAQ,EAArD;;AAEA,MAAIQ,SAAJ,EAAe;AACX,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,MAAI,CAACC,eAAL,EAAsB;AAClB,wBAAO,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAVe,CAYhB;;;AAEA,QAAMC,MAAM,GAAGH,IAAI,CAACI,GAApB;AAEA,QAAM,CAAEC,QAAF,EAAYC,WAAZ,IAA4BZ,QAAQ,CAAC;AAAEa,IAAAA,QAAQ,EAAE,KAAZ;AAAmBC,IAAAA,IAAI,EAAE;AAAzB,GAAD,CAA1C;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAec,YAAf,GAA+B;AAC3BZ,MAAAA,QAAQ,CAACa,WAAT,CAAqB,OAArB,EAA8B;AAACP,QAAAA,MAAM,EAAEA;AAAT,OAA9B,EACKQ,IADL,CACUN,QAAQ,IAAI;AACdC,QAAAA,WAAW,CAAC;AACRC,UAAAA,QAAQ,EAAE,IADF;AAERC,UAAAA,IAAI,EAAEH;AAFE,SAAD,CAAX;AAIH,OANL,EAOKO,KAPL,CAOWC,CAAC,IAAI;AACRP,QAAAA,WAAW,CAAC;AAACC,UAAAA,QAAQ,EAAE,IAAX;AAAiBC,UAAAA,IAAI,EAAE;AAAvB,SAAD,CAAX;AACH,OATL;AAUH;;AACDC,IAAAA,YAAY;AACf,GAdQ,CAAT;AAgBA,SACI,CAACJ,QAAQ,CAACE,QAAV,gBAAqB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAArB,gBACI;AAAK,IAAA,KAAK,EAAE;AAACO,MAAAA,SAAS,EAAE;AAAZ,KAAZ;AAAA,cACKC,OAAO,CAACC,GAAR,CAAYX,QAAQ,CAACG,IAArB;AADL;AAAA;AAAA;AAAA;AAAA,UAFR;AAQH;;GA1CQT,Q;UAEwCN,Q;;;KAFxCM,Q;AA4CT,eAAeA,QAAf","sourcesContent":["import { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { useState, useEffect, Fragment } from \"react\";\r\nimport database from \"../utils/database\";\r\nimport Loading from \"../utils/Loading\";\r\n\r\nfunction Settings() {\r\n\r\n    const { user, isLoading, isAuthenticated } = useAuth0();\r\n\r\n    if (isLoading) {\r\n        return <Loading />\r\n    }\r\n\r\n    if (!isAuthenticated) {\r\n        return <Fragment>Veuillez vous connecter pour modifier vos paramètres.</Fragment>\r\n    }\r\n\r\n    // L'utilisateur est authentifié\r\n\r\n    const userID = user.sub;\r\n\r\n    const [ userData, setUserData ] = useState({ isLoaded: false, data: {} })\r\n    \r\n    useEffect(() => {\r\n        async function loadUserData () {\r\n            database.searchItems(\"users\", {userID: userID})\r\n                .then(userData => {\r\n                    setUserData({\r\n                        isLoaded: true,\r\n                        data: userData\r\n                    })\r\n                })\r\n                .catch(_ => {\r\n                    setUserData({isLoaded: true, data: {}})\r\n                })\r\n        }\r\n        loadUserData();\r\n    })\r\n\r\n    return (\r\n        !userData.isLoaded ? <Loading /> : (\r\n            <div style={{textAlign: 'center'}}>\r\n                {console.log(userData.data)}\r\n            </div>\r\n        )\r\n    )\r\n\r\n}\r\n\r\nexport default Settings;"]},"metadata":{},"sourceType":"module"}