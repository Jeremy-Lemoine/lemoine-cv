{"ast":null,"code":"var _jsxFileName = \"D:\\\\Bureau\\\\Test React\\\\coman-app\\\\src\\\\utils\\\\Loading.jsx\",\n    _s = $RefreshSig$();\n\nimport CircularProgress from \"react-cssfx-loading/lib/CircularProgress\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useLoading(loadedRender) {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n\n  let render = () => {\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"orange\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 20\n      }, this);\n    } else {\n      return loadedRender();\n    }\n  };\n\n  return isLoading, setIsLoading, render;\n}\n\n_s(useLoading, \"YEzP0T5qhlvABLHQydW3VCyOjjw=\");\n\nexport default useLoading;","map":{"version":3,"sources":["D:/Bureau/Test React/coman-app/src/utils/Loading.jsx"],"names":["CircularProgress","useState","useLoading","loadedRender","isLoading","setIsLoading","render"],"mappings":";;;AAAA,OAAOA,gBAAP,MAA6B,0CAA7B;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,UAAT,CAAoBC,YAApB,EAAkC;AAAA;;AAE9B,QAAM,CAAEC,SAAF,EAAaC,YAAb,IAA8BJ,QAAQ,CAAC,IAAD,CAA5C;;AAEA,MAAIK,MAAM,GAAG,MAAM;AACf,QAAIF,SAAJ,EAAe;AACX,0BAAO,QAAC,gBAAD;AAAkB,QAAA,KAAK,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFD,MAEO;AACH,aAAOD,YAAY,EAAnB;AACH;AACJ,GAND;;AAQA,SAAOC,SAAS,EAAEC,YAAF,EAAgBC,MAAhC;AAEH;;GAdQJ,U;;AAgBT,eAAeA,UAAf","sourcesContent":["import CircularProgress from \"react-cssfx-loading/lib/CircularProgress\";\r\nimport { useState } from \"react\";\r\n\r\nfunction useLoading(loadedRender) {\r\n\r\n    const [ isLoading, setIsLoading ] = useState(true);\r\n\r\n    let render = () => {\r\n        if (isLoading) {\r\n            return <CircularProgress color='orange'/>;\r\n        } else {\r\n            return loadedRender();\r\n        }\r\n    }\r\n\r\n    return isLoading, setIsLoading, render;\r\n\r\n}\r\n\r\nexport default useLoading;"]},"metadata":{},"sourceType":"module"}