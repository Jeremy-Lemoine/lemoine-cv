{"ast":null,"code":"var _jsxFileName = \"D:\\\\Bureau\\\\Test React\\\\coman-app\\\\src\\\\pages\\\\Machines.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Loading from \"../utils/Loading\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Machines() {\n  _s();\n\n  const [machinesData, setMachinesData] = useState({\n    isLoading: true,\n    data: {}\n  });\n  useEffect(() => {\n    axios.get('https://coman-machines-api.herokuapp.com').then(reponse => {\n      setMachinesData({\n        isLoading: false,\n        data: reponse.data.machine_info_status.machine_list\n      });\n    });\n  }, []);\n  return machinesData.isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 37\n  }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n    children: /*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Machines, \"gWWBzzMHtDbp6cG+dtKu2K0HfWs=\");\n\n_c = Machines;\nexport default Machines;\n\nvar _c;\n\n$RefreshReg$(_c, \"Machines\");","map":{"version":3,"sources":["D:/Bureau/Test React/coman-app/src/pages/Machines.jsx"],"names":["useState","useEffect","Loading","axios","Machines","machinesData","setMachinesData","isLoading","data","get","then","reponse","machine_info_status","machine_list"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAEhB,QAAM,CAAEC,YAAF,EAAgBC,eAAhB,IAAoCN,QAAQ,CAAC;AAC/CO,IAAAA,SAAS,EAAE,IADoC;AAE/CC,IAAAA,IAAI,EAAE;AAFyC,GAAD,CAAlD;AAKAP,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,CAACM,GAAN,CAAU,0CAAV,EACCC,IADD,CACMC,OAAO,IAAI;AACbL,MAAAA,eAAe,CAAC;AACZC,QAAAA,SAAS,EAAE,KADC;AAEZC,QAAAA,IAAI,EAAEG,OAAO,CAACH,IAAR,CAAaI,mBAAb,CAAiCC;AAF3B,OAAD,CAAf;AAIH,KAND;AAOH,GARQ,EAQN,EARM,CAAT;AAUA,SAAOR,YAAY,CAACE,SAAb,gBAAyB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAzB,gBACH;AAAA,2BACI;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GA1BQH,Q;;KAAAA,Q;AA4BT,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from \"react\"\r\nimport Loading from \"../utils/Loading\"\r\nimport axios from \"axios\"\r\n\r\nfunction Machines() {\r\n\r\n    const [ machinesData, setMachinesData ] = useState({\r\n        isLoading: true,\r\n        data: {}\r\n    })\r\n\r\n    useEffect(() => {\r\n        axios.get('https://coman-machines-api.herokuapp.com')\r\n        .then(reponse => {\r\n            setMachinesData({\r\n                isLoading: false,\r\n                data: reponse.data.machine_info_status.machine_list\r\n            })\r\n        })\r\n    }, [])\r\n    \r\n    return machinesData.isLoading ? <Loading /> : (\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    \r\n                </tr>\r\n            </thead>\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default Machines;"]},"metadata":{},"sourceType":"module"}