{"ast":null,"code":"var _jsxFileName = \"D:\\\\Bureau\\\\Test React\\\\coman-app\\\\src\\\\NavigationBar.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { motion } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NavigationBar(props) {\n  _s();\n\n  const navigate = useNavigate();\n  const pagesList = props.pagesList;\n  const [currentPageName, setCurrentPageName] = useState(props.currentPageName);\n  useEffect(() => {\n    setCurrentPageName(props.currentPageName);\n  }, [props.currentPageName]);\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    exit: {\n      y: '-90%'\n    },\n    animate: {\n      y: 0\n    },\n    initial: {\n      y: '-90%'\n    },\n    transition: {\n      duration: 0.5\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation-bar\",\n      children: [currentPageName ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-title\",\n        children: pagesList.find(page => page.name === currentPageName).title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 29\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: pagesList.slice().reverse().filter(page => !page.hidden).map(_ref => {\n          let {\n            name,\n            path\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: name === currentPageName ? \"active\" : \"\",\n            onClick: () => navigate(path),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 33\n            }, this)\n          }, name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NavigationBar, \"IffH84K7X/HXA15dI1V/PlDwchg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = NavigationBar;\nexport default NavigationBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavigationBar\");","map":{"version":3,"sources":["D:/Bureau/Test React/coman-app/src/NavigationBar.jsx"],"names":["useEffect","useState","useNavigate","motion","NavigationBar","props","navigate","pagesList","currentPageName","setCurrentPageName","y","duration","find","page","name","title","slice","reverse","filter","hidden","map","path"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,MAAT,QAAuB,eAAvB;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAE1B,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AAEA,QAAMK,SAAS,GAAGF,KAAK,CAACE,SAAxB;AACA,QAAM,CAAEC,eAAF,EAAmBC,kBAAnB,IAA0CR,QAAQ,CAACI,KAAK,CAACG,eAAP,CAAxD;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,kBAAkB,CAACJ,KAAK,CAACG,eAAP,CAAlB;AACH,GAFQ,EAEN,CAACH,KAAK,CAACG,eAAP,CAFM,CAAT;AAIA,sBACI,QAAC,MAAD,CAAQ,GAAR;AACI,IAAA,IAAI,EAAE;AAACE,MAAAA,CAAC,EAAE;AAAJ,KADV;AAEI,IAAA,OAAO,EAAE;AAACA,MAAAA,CAAC,EAAE;AAAJ,KAFb;AAGI,IAAA,OAAO,EAAE;AAACA,MAAAA,CAAC,EAAE;AAAJ,KAHb;AAII,IAAA,UAAU,EAAE;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAJhB;AAAA,2BAMI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,iBAEQH,eAAe,gBAEP;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,kBACKD,SAAS,CAACK,IAAV,CAAeC,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAcN,eAArC,EAAsDO;AAD3D;AAAA;AAAA;AAAA;AAAA,cAFO,GAOX,EATZ,eAWI;AAAA,kBAEIR,SAAS,CAACS,KAAV,GAAkBC,OAAlB,GAA4BC,MAA5B,CAAmCL,IAAI,IAAI,CAACA,IAAI,CAACM,MAAjD,EAAyDC,GAAzD,CAA6D,QAAkB;AAAA,cAAjB;AAACN,YAAAA,IAAD;AAAOO,YAAAA;AAAP,WAAiB;AAC3E,8BACI;AAAe,YAAA,SAAS,EAAEP,IAAI,KAAKN,eAAT,GAA2B,QAA3B,GAAsC,EAAhE;AAAoE,YAAA,OAAO,EAAE,MAAMF,QAAQ,CAACe,IAAD,CAA3F;AAAA,mCACI;AAAA,wBAAOP;AAAP;AAAA;AAAA;AAAA;AAAA;AADJ,aAASA,IAAT;AAAA;AAAA;AAAA;AAAA,kBADJ;AAKH,SAND;AAFJ;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiCH;;GA5CQV,a;UAEYF,W;;;KAFZE,a;AA8CT,eAAeA,aAAf","sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport { useNavigate } from \"react-router\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nfunction NavigationBar(props) {\r\n\r\n    const navigate = useNavigate();\r\n    \r\n    const pagesList = props.pagesList;\r\n    const [ currentPageName, setCurrentPageName ] = useState(props.currentPageName);\r\n\r\n    useEffect(() => {\r\n        setCurrentPageName(props.currentPageName)\r\n    }, [props.currentPageName])\r\n\r\n    return (\r\n        <motion.div\r\n            exit={{y: '-90%'}}\r\n            animate={{y: 0}}\r\n            initial={{y: '-90%'}}\r\n            transition={{duration: 0.5}}\r\n        >\r\n            <div className=\"navigation-bar\">\r\n                {\r\n                    currentPageName ? \r\n                        (\r\n                            <div className=\"left-title\">\r\n                                {pagesList.find(page => page.name === currentPageName).title}\r\n                            </div>\r\n                        )\r\n                        :\r\n                        \"\"\r\n                }\r\n                <ul>\r\n                {   \r\n                    pagesList.slice().reverse().filter(page => !page.hidden).map(({name, path}) => {\r\n                        return (\r\n                            <li key={name} className={name === currentPageName ? \"active\" : \"\"} onClick={() => navigate(path)} >\r\n                                <span>{name}</span>\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n                </ul>\r\n            </div>\r\n        </motion.div>\r\n    )\r\n\r\n}\r\n\r\nexport default NavigationBar;"]},"metadata":{},"sourceType":"module"}