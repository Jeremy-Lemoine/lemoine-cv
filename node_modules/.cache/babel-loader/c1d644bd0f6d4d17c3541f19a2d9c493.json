{"ast":null,"code":"var _jsxFileName = \"D:\\\\Bureau\\\\Projets Perso\\\\Online CV\\\\src\\\\utils\\\\components\\\\Selection.jsx\",\n    _s = $RefreshSig$();\n\nimport { useTranslation } from \"react-i18next\";\nimport Select, { components } from \"react-select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colourStyles = {\n  control: styles => ({ ...styles,\n    fontFamily: \"var(--coman-font)\",\n    textAlign: \"center\",\n    backgroundColor: \"var(--white)\"\n  }),\n  option: (styles, _ref) => {\n    let {\n      data,\n      isDisabled,\n      isFocused,\n      isSelected\n    } = _ref;\n    return { ...styles,\n      border: \"2px solid var(--white)\",\n      borderRadius: \"10px\",\n      backgroundColor: isFocused ? \"var(--green-1)\" : \"var(--white)\",\n      color: isFocused ? \"var(--white)\" : \"black\",\n      marginBottom: \"2px\",\n      marginTop: \"2px\",\n      cursor: \"pointer\",\n      transition: \"background-color 0.15s ease-in-out, color 0.15s ease-in-out\"\n    };\n  },\n  menu: base => {\n    return { ...base,\n      backgroundColor: \"rgba(0, 0, 0, 0.45)\",\n      padding: \"8px\",\n      border: \"2px solid var(--green-3)\",\n      textAlign: \"center\",\n      fontFamily: \"var(--coman-font)\"\n    };\n  }\n};\n\nconst Control = _ref2 => {\n  let {\n    children,\n    ...props\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(components.Control, { ...props,\n    children: [children, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openModal,\n      children: \"Open Modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 2\n  }, this);\n};\n\n_c = Control;\n\nfunction Selection(_ref3) {\n  _s();\n\n  let {\n    options,\n    defaultOption,\n    handleChange,\n    className\n  } = _ref3;\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"selector-component\",\n    children: /*#__PURE__*/_jsxDEV(Select, {\n      defaultValue: defaultOption,\n      options: options,\n      className: className,\n      onChange: handleChange,\n      styles: colourStyles,\n      noOptionsMessage: () => t(\"selector_no_result_message\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Selection, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c2 = Selection;\nexport default Selection;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Control\");\n$RefreshReg$(_c2, \"Selection\");","map":{"version":3,"sources":["D:/Bureau/Projets Perso/Online CV/src/utils/components/Selection.jsx"],"names":["useTranslation","Select","components","colourStyles","control","styles","fontFamily","textAlign","backgroundColor","option","data","isDisabled","isFocused","isSelected","border","borderRadius","color","marginBottom","marginTop","cursor","transition","menu","base","padding","Control","children","props","openModal","Selection","options","defaultOption","handleChange","className","t"],"mappings":";;;AAAA,SAASA,cAAT,QAA+B,eAA/B;AACA,OAAOC,MAAP,IAAiBC,UAAjB,QAAmC,cAAnC;;AAEA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,OAAO,EAAGC,MAAD,KAAa,EACrB,GAAGA,MADkB;AAErBC,IAAAA,UAAU,EAAE,mBAFS;AAGrBC,IAAAA,SAAS,EAAE,QAHU;AAIrBC,IAAAA,eAAe,EAAE;AAJI,GAAb,CADW;AAOpBC,EAAAA,MAAM,EAAE,CAACJ,MAAD,WAAyD;AAAA,QAAhD;AAAEK,MAAAA,IAAF;AAAQC,MAAAA,UAAR;AAAoBC,MAAAA,SAApB;AAA+BC,MAAAA;AAA/B,KAAgD;AAChE,WAAO,EACN,GAAGR,MADG;AAENS,MAAAA,MAAM,EAAE,wBAFF;AAGNC,MAAAA,YAAY,EAAE,MAHR;AAINP,MAAAA,eAAe,EAAEI,SAAS,GAAG,gBAAH,GAAsB,cAJ1C;AAKNI,MAAAA,KAAK,EAAEJ,SAAS,GAAG,cAAH,GAAoB,OAL9B;AAMNK,MAAAA,YAAY,EAAE,KANR;AAONC,MAAAA,SAAS,EAAE,KAPL;AAQNC,MAAAA,MAAM,EAAE,SARF;AASNC,MAAAA,UAAU,EAAE;AATN,KAAP;AAWA,GAnBmB;AAoBpBC,EAAAA,IAAI,EAAGC,IAAD,IAAU;AACf,WAAO,EACN,GAAGA,IADG;AAENd,MAAAA,eAAe,EAAE,qBAFX;AAGNe,MAAAA,OAAO,EAAE,KAHH;AAINT,MAAAA,MAAM,EAAE,0BAJF;AAKNP,MAAAA,SAAS,EAAE,QALL;AAMND,MAAAA,UAAU,EAAE;AANN,KAAP;AAQA;AA7BmB,CAArB;;AAgCA,MAAMkB,OAAO,GAAG;AAAA,MAAC;AAAEC,IAAAA,QAAF;AAAY,OAAGC;AAAf,GAAD;AAAA,sBACf,QAAC,UAAD,CAAY,OAAZ,OAAwBA,KAAxB;AAAA,eACED,QADF,eAEC;AAAQ,MAAA,OAAO,EAAEE,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADe;AAAA,CAAhB;;KAAMH,O;;AAON,SAASI,SAAT,QAAwE;AAAA;;AAAA,MAArD;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,aAAX;AAA0BC,IAAAA,YAA1B;AAAwCC,IAAAA;AAAxC,GAAqD;AACvE,QAAM;AAAEC,IAAAA;AAAF,MAAQjC,cAAc,EAA5B;AAEA,sBACC;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,2BACC,QAAC,MAAD;AACC,MAAA,YAAY,EAAE8B,aADf;AAEC,MAAA,OAAO,EAAED,OAFV;AAGC,MAAA,SAAS,EAAEG,SAHZ;AAIC,MAAA,QAAQ,EAAED,YAJX;AAKC,MAAA,MAAM,EAAE5B,YALT;AAMC,MAAA,gBAAgB,EAAE,MAAM8B,CAAC,CAAC,4BAAD;AAN1B;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAYA;;GAfQL,S;UACM5B,c;;;MADN4B,S;AAiBT,eAAeA,SAAf","sourcesContent":["import { useTranslation } from \"react-i18next\";\r\nimport Select, { components } from \"react-select\";\r\n\r\nconst colourStyles = {\r\n\tcontrol: (styles) => ({\r\n\t\t...styles,\r\n\t\tfontFamily: \"var(--coman-font)\",\r\n\t\ttextAlign: \"center\",\r\n\t\tbackgroundColor: \"var(--white)\",\r\n\t}),\r\n\toption: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n\t\treturn {\r\n\t\t\t...styles,\r\n\t\t\tborder: \"2px solid var(--white)\",\r\n\t\t\tborderRadius: \"10px\",\r\n\t\t\tbackgroundColor: isFocused ? \"var(--green-1)\" : \"var(--white)\",\r\n\t\t\tcolor: isFocused ? \"var(--white)\" : \"black\",\r\n\t\t\tmarginBottom: \"2px\",\r\n\t\t\tmarginTop: \"2px\",\r\n\t\t\tcursor: \"pointer\",\r\n\t\t\ttransition: \"background-color 0.15s ease-in-out, color 0.15s ease-in-out\",\r\n\t\t};\r\n\t},\r\n\tmenu: (base) => {\r\n\t\treturn {\r\n\t\t\t...base,\r\n\t\t\tbackgroundColor: \"rgba(0, 0, 0, 0.45)\",\r\n\t\t\tpadding: \"8px\",\r\n\t\t\tborder: \"2px solid var(--green-3)\",\r\n\t\t\ttextAlign: \"center\",\r\n\t\t\tfontFamily: \"var(--coman-font)\",\r\n\t\t};\r\n\t},\r\n};\r\n\r\nconst Control = ({ children, ...props }) => (\r\n\t<components.Control {...props}>\r\n\t\t{children}\r\n\t\t<button onClick={openModal}>Open Modal</button>\r\n\t</components.Control>\r\n);\r\n\r\nfunction Selection({ options, defaultOption, handleChange, className }) {\r\n\tconst { t } = useTranslation();\r\n\r\n\treturn (\r\n\t\t<div className='selector-component'>\r\n\t\t\t<Select\r\n\t\t\t\tdefaultValue={defaultOption}\r\n\t\t\t\toptions={options}\r\n\t\t\t\tclassName={className}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\tstyles={colourStyles}\r\n\t\t\t\tnoOptionsMessage={() => t(\"selector_no_result_message\")}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Selection;\r\n"]},"metadata":{},"sourceType":"module"}