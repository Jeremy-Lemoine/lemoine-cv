{"ast":null,"code":"var _jsxFileName = \"D:\\\\Bureau\\\\Projets Perso\\\\Online CV\\\\src\\\\pages\\\\mainPage\\\\contact\\\\MeContacter.jsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { send } from \"emailjs-com\";\nimport useWindowDimensions from \"../../../utils/hooks/useWindowDimensions\";\nimport ModalContact from \"./ModalContact\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MeContacter(_ref) {\n  _s();\n\n  let {\n    isOpen,\n    setIsOpen\n  } = _ref;\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    reset\n  } = useForm();\n  /*\r\n   0 - Initial\r\n   1 - Loading (sending the mail)\r\n   2 - Success\r\n  -1 - Error\r\n  */\n\n  const [step, setStep] = useState(0);\n  const {\n    width: winWidth\n  } = useWindowDimensions();\n  const submit = useCallback(data => {\n    console.log(data); // setStep(1);\n    // Maybe put these constants in .env file\n    // send(\"service_vll6ms8\", \"template_4i4v4tc\", data, \"user_bWOvJmKNGyBen5qbMmJm8\")\n    // \t.then(() => setStep(2))\n    // \t.catch(() => setStep(-1));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ModalContact, {\n    isOpen: isOpen,\n    setIsOpen: setIsOpen,\n    onClose: () => {\n      setStep(0);\n      reset();\n    },\n    children: step === 0 ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(submit),\n      className: \"formulaire\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Me contacter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"corps\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Nom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"from_name\", {\n            required: true\n          }),\n          placeholder: \"Nom\",\n          className: errors.name && \"invalid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: errors.name && errors.name.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"from_email\", {\n            pattern: /^[A-Za-z0-9]+@[a-zA-Z0-9.]+\\.[a-zA-Z]{2,4}$/i,\n            required: \"L'e-mail donnÃ©e n'est pas au bon format\"\n          }),\n          placeholder: \"E-mail\",\n          className: errors.email && \"invalid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: errors.email && errors.email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", { ...register(\"message\", {\n            required: true\n          }),\n          placeholder: \"Message\",\n          className: errors.message && \"invalid\",\n          rows: 5,\n          style: {\n            width: winWidth * 0.2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: errors.message && errors.message.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Envoyer\",\n        className: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this) : step === 1 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        padding: \"50px\"\n      },\n      children: \"Envoi en cours...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }, this) : step === 2 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        padding: \"50px\"\n      },\n      children: \"Envoy\\xE9 avec succ\\xE8s\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        padding: \"50px\"\n      },\n      children: \"Une erreur est survenue.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, this);\n}\n\n_s(MeContacter, \"AKj8AgvLmy1YwkEDUFblBOV6dMc=\", false, function () {\n  return [useForm, useWindowDimensions];\n});\n\n_c = MeContacter;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeContacter\");","map":{"version":3,"sources":["D:/Bureau/Projets Perso/Online CV/src/pages/mainPage/contact/MeContacter.jsx"],"names":["useCallback","useState","useForm","send","useWindowDimensions","ModalContact","MeContacter","isOpen","setIsOpen","register","handleSubmit","formState","errors","reset","step","setStep","width","winWidth","submit","data","console","log","required","name","message","pattern","email","padding"],"mappings":"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","sourcesContent":["import { useCallback, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { send } from \"emailjs-com\";\r\n\r\nimport useWindowDimensions from \"../../../utils/hooks/useWindowDimensions\";\r\nimport ModalContact from \"./ModalContact\";\r\n\r\nexport default function MeContacter({ isOpen, setIsOpen }) {\r\n\tconst {\r\n\t\tregister,\r\n\t\thandleSubmit,\r\n\t\tformState: { errors },\r\n\t\treset,\r\n\t} = useForm();\r\n\r\n\t/*\r\n\t 0 - Initial\r\n\t 1 - Loading (sending the mail)\r\n\t 2 - Success\r\n\t-1 - Error\r\n\t*/\r\n\tconst [step, setStep] = useState(0);\r\n\r\n\tconst { width: winWidth } = useWindowDimensions();\r\n\r\n\tconst submit = useCallback((data) => {\r\n\t\tconsole.log(data);\r\n\t\t// setStep(1);\r\n\t\t// Maybe put these constants in .env file\r\n\t\t// send(\"service_vll6ms8\", \"template_4i4v4tc\", data, \"user_bWOvJmKNGyBen5qbMmJm8\")\r\n\t\t// \t.then(() => setStep(2))\r\n\t\t// \t.catch(() => setStep(-1));\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<ModalContact\r\n\t\t\tisOpen={isOpen}\r\n\t\t\tsetIsOpen={setIsOpen}\r\n\t\t\tonClose={() => {\r\n\t\t\t\tsetStep(0);\r\n\t\t\t\treset();\r\n\t\t\t}}>\r\n\t\t\t{step === 0 ? (\r\n\t\t\t\t<form onSubmit={handleSubmit(submit)} className='formulaire'>\r\n\t\t\t\t\t<h3>Me contacter</h3>\r\n\r\n\t\t\t\t\t<div className='corps'>\r\n\t\t\t\t\t\t<label>Nom</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t{...register(\"from_name\", { required: true })}\r\n\t\t\t\t\t\t\tplaceholder='Nom'\r\n\t\t\t\t\t\t\tclassName={errors.name && \"invalid\"}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<span className='error'>{errors.name && errors.name.message}</span>\r\n\r\n\t\t\t\t\t\t<label>Mail</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t{...register(\"from_email\", {\r\n\t\t\t\t\t\t\t\tpattern: /^[A-Za-z0-9]+@[a-zA-Z0-9.]+\\.[a-zA-Z]{2,4}$/i,\r\n\t\t\t\t\t\t\t\trequired: \"L'e-mail donnÃ©e n'est pas au bon format\",\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tplaceholder='E-mail'\r\n\t\t\t\t\t\t\tclassName={errors.email && \"invalid\"}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<span className='error'>{errors.email && errors.email.message}</span>\r\n\r\n\t\t\t\t\t\t<label>Message</label>\r\n\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t{...register(\"message\", { required: true })}\r\n\t\t\t\t\t\t\tplaceholder='Message'\r\n\t\t\t\t\t\t\tclassName={errors.message && \"invalid\"}\r\n\t\t\t\t\t\t\trows={5}\r\n\t\t\t\t\t\t\tstyle={{ width: winWidth * 0.2 }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<span className='error'>{errors.message && errors.message.message}</span>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<input type='submit' value={\"Envoyer\"} className='submit' />\r\n\t\t\t\t</form>\r\n\t\t\t) : step === 1 ? (\r\n\t\t\t\t<h3 style={{ padding: \"50px\" }}>Envoi en cours...</h3>\r\n\t\t\t) : step === 2 ? (\r\n\t\t\t\t<h3 style={{ padding: \"50px\" }}>EnvoyÃ© avec succÃ¨s</h3>\r\n\t\t\t) : (\r\n\t\t\t\t<h3 style={{ padding: \"50px\" }}>Une erreur est survenue.</h3>\r\n\t\t\t)}\r\n\t\t</ModalContact>\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}