{"ast":null,"code":"var _jsxFileName = \"D:\\\\Bureau\\\\Test React\\\\coman-app\\\\src\\\\pages\\\\Other.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport useLoaded from \"../utils/Loaded\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  MongoClient\n} = require('mongodb');\n\nfunction Other() {\n  _s();\n\n  const [text, setText] = useState(\"LOL\");\n\n  let loadedRender = () => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 39\n    }, this);\n  };\n\n  const [isLoaded, setIsLoaded, render] = useLoaded(loadedRender);\n  const url = \"mongodb+srv://botroot:Lemazal7@cluster0.f0fh7.mongodb.net?retryWrites=true&w=majority\";\n  const client = new MongoClient(url, {\n    useNewUrlParser: true,\n    useUnifiedTopology: true\n  });\n  client.connect(err => {\n    const collection = client.db(\"ComanBase\").collection(\"config\");\n    setIsLoaded(true);\n    setText(collection.count({}));\n    client.close();\n  });\n  return render();\n}\n\n_s(Other, \"NMncFMtfz7V2bN6O+0XPEjAOoC4=\", false, function () {\n  return [useLoaded];\n});\n\n_c = Other;\nexport default Other;\n\nvar _c;\n\n$RefreshReg$(_c, \"Other\");","map":{"version":3,"sources":["D:/Bureau/Test React/coman-app/src/pages/Other.jsx"],"names":["useState","useLoaded","MongoClient","require","Other","text","setText","loadedRender","isLoaded","setIsLoaded","render","url","client","useNewUrlParser","useUnifiedTopology","connect","err","collection","db","count","close"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAkBC,OAAO,CAAC,SAAD,CAA/B;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AAEb,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBN,QAAQ,CAAC,KAAD,CAAlC;;AAEA,MAAIO,YAAY,GAAG,MAAM;AAAE,wBAAO;AAAA,gBAAIF;AAAJ;AAAA;AAAA;AAAA;AAAA,YAAP;AAAsB,GAAjD;;AAEA,QAAM,CAAEG,QAAF,EAAYC,WAAZ,EAAyBC,MAAzB,IAAoCT,SAAS,CAACM,YAAD,CAAnD;AAEA,QAAMI,GAAG,GAAG,uFAAZ;AACA,QAAMC,MAAM,GAAG,IAAIV,WAAJ,CAAgBS,GAAhB,EAAqB;AAAEE,IAAAA,eAAe,EAAE,IAAnB;AAAyBC,IAAAA,kBAAkB,EAAE;AAA7C,GAArB,CAAf;AACAF,EAAAA,MAAM,CAACG,OAAP,CAAeC,GAAG,IAAI;AACtB,UAAMC,UAAU,GAAGL,MAAM,CAACM,EAAP,CAAU,WAAV,EAAuBD,UAAvB,CAAkC,QAAlC,CAAnB;AAEAR,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAH,IAAAA,OAAO,CAACW,UAAU,CAACE,KAAX,CAAiB,EAAjB,CAAD,CAAP;AAEAP,IAAAA,MAAM,CAACQ,KAAP;AACC,GAPD;AAUA,SAAOV,MAAM,EAAb;AAGH;;GAvBQN,K;UAMqCH,S;;;KANrCG,K;AAyBT,eAAeA,KAAf","sourcesContent":["import { useState } from \"react\";\r\nimport useLoaded from \"../utils/Loaded\";\r\n\r\nconst { MongoClient } = require('mongodb');\r\n\r\nfunction Other() {\r\n\r\n    const [ text, setText ] = useState(\"LOL\")\r\n\r\n    let loadedRender = () => { return <p>{text}</p> }\r\n\r\n    const [ isLoaded, setIsLoaded, render ] = useLoaded(loadedRender)\r\n\r\n    const url = \"mongodb+srv://botroot:Lemazal7@cluster0.f0fh7.mongodb.net?retryWrites=true&w=majority\";\r\n    const client = new MongoClient(url, { useNewUrlParser: true, useUnifiedTopology: true });\r\n    client.connect(err => {\r\n    const collection = client.db(\"ComanBase\").collection(\"config\");\r\n    \r\n    setIsLoaded(true);\r\n    setText(collection.count({}));\r\n\r\n    client.close();\r\n    });\r\n\r\n\r\n    return render();\r\n\r\n\r\n}\r\n\r\nexport default Other;"]},"metadata":{},"sourceType":"module"}